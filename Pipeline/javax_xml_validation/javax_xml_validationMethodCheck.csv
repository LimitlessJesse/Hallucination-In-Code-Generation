Sample Number,ClassName,Snippet Number,Method,Exist
0,Schema,1,boolean add(E e),False
0,Schema,2,boolean addAll(Collection<? extends E> c),False
0,Schema,3,void clear(),False
0,Schema,4,boolean contains(Object o),False
0,Schema,5,boolean containsAll(Collection<?> c),False
0,Schema,6,boolean equals(Object o),False
0,Schema,7,E get(int index),False
0,Schema,8,int indexOf(Object o),False
0,Schema,9,boolean isEmpty(),False
0,Schema,10,Iterator<E> iterator(),False
0,Schema,11,int lastIndexOf(Object o),False
0,Schema,12,ListIterator<E> listIterator(),False
0,Schema,13,ListIterator<E> listIterator(int index),False
0,Schema,14,boolean remove(Object o),False
0,Schema,15,E remove(int index),False
0,Schema,16,boolean removeAll(Collection<?> c),False
0,Schema,17,boolean retainAll(Collection<?> c),False
0,Schema,18,"E set(int index, E element)",False
0,Schema,19,int size(),False
0,Schema,20,"List<E> subList(int fromIndex, int toIndex)",False
0,Schema,21,Object[] toArray(),False
0,Schema,22,<T> T[] toArray(T[] a),False
0,Schema,23,"boolean addAll(int index, Collection<? extends E> c)",False
0,Schema,24,boolean containsAll(Collection<?> c),False
0,Schema,25,boolean removeAll(Collection<?> c),False
0,Schema,26,boolean retainAll(Collection<?> c),False
0,Schema,27,"List<E> subList(int fromIndex, int toIndex)",False
0,Schema,28,Object clone(),False
0,Schema,29,void forEach(Consumer<? super E> action),False
0,Schema,30,Spliterator<E> spliterator(),False
1,SchemaFactory,1,SchemaFactory newInstance(String schemaLanguage),True
1,SchemaFactory,2,Schema newSchema(Source schemaSource),True
1,SchemaFactory,3,Schema newSchema(URL schemaURL),True
1,SchemaFactory,4,Schema newSchema(File schemaFile),True
1,SchemaFactory,5,Schema newSchema(Reader schemaReader),False
2,SchemaFactoryLoader,1,SchemaFactoryLoader.newInstance(String factoryClassName),False
2,SchemaFactoryLoader,2,"SchemaFactoryLoader.newInstance(String factoryClassName, ClassLoader classLoader)",False
2,SchemaFactoryLoader,3,"SchemaFactoryLoader.newInstance(String factoryClassName, ClassLoader classLoader, ClassLoader classLoaderForSchema)",False
2,SchemaFactoryLoader,4,"SchemaFactoryLoader.newInstance(String factoryClassName, ClassLoader classLoader, ClassLoader classLoaderForSchema, ClassLoader classLoaderForSchemaLanguage)",False
2,SchemaFactoryLoader,5,"SchemaFactoryLoader.newInstance(String factoryClassName, ClassLoader classLoader, ClassLoader classLoaderForSchema, ClassLoader classLoaderForSchemaLanguage, ClassLoader classLoaderForSchemaLanguageDTD)",False
3,TypeInfoProvider,1,boolean isDerivedFrom(TypeInfo typeInfo),False
3,TypeInfoProvider,2,boolean isAssignableFrom(TypeInfo typeInfo),False
3,TypeInfoProvider,3,boolean isSubstitutableBy(TypeInfo typeInfo),False
3,TypeInfoProvider,4,boolean isIdenticalTo(TypeInfo typeInfo),False
3,TypeInfoProvider,5,boolean isSubtypeOf(TypeInfo typeInfo),False
4,Validator,1,boolean validate(Source source),False
4,Validator,2,"boolean validate(Source source, Result result)",False
4,Validator,3,"boolean validate(Source source, Result result, boolean recover)",False
4,Validator,4,"boolean validate(Source source, Result result, boolean recover, boolean validationErrorListener)",False
4,Validator,5,"boolean validate(Source source, Result result, boolean recover, boolean validationErrorListener, boolean validationEventLocator)",False
5,ValidatorHandler,1,boolean handleEvent(ValidationEvent event),False
5,ValidatorHandler,2,"void characters(char[] ch, int start, int length)",False
5,ValidatorHandler,3,"void ignorableWhitespace(char[] ch, int start, int length)",False
5,ValidatorHandler,4,"void processingInstruction(String target, String data)",False
5,ValidatorHandler,5,void setDocumentLocator(Locator locator),False
