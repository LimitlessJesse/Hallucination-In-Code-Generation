Sample Number,ClassName,Snippet Number,Method,Exist
0,DefaultLoaderRepository,1,boolean add(E e),False
0,DefaultLoaderRepository,2,boolean addAll(Collection<? extends E> c),False
0,DefaultLoaderRepository,3,void clear(),False
0,DefaultLoaderRepository,4,boolean contains(Object o),False
0,DefaultLoaderRepository,5,boolean containsAll(Collection<?> c),False
0,DefaultLoaderRepository,6,E get(int index),False
0,DefaultLoaderRepository,7,int indexOf(Object o),False
0,DefaultLoaderRepository,8,boolean isEmpty(),False
0,DefaultLoaderRepository,9,Iterator<E> iterator(),False
0,DefaultLoaderRepository,10,E remove(int index),False
0,DefaultLoaderRepository,11,boolean remove(Object o),False
0,DefaultLoaderRepository,12,boolean removeAll(Collection<?> c),False
0,DefaultLoaderRepository,13,boolean retainAll(Collection<?> c),False
0,DefaultLoaderRepository,14,"E set(int index, E element)",False
0,DefaultLoaderRepository,15,int size(),False
0,DefaultLoaderRepository,16,"List<E> subList(int fromIndex, int toIndex)",False
0,DefaultLoaderRepository,17,Object[] toArray(),False
0,DefaultLoaderRepository,18,<T> T[] toArray(T[] a),False
0,DefaultLoaderRepository,19,ListIterator<E> listIterator(),False
0,DefaultLoaderRepository,20,ListIterator<E> listIterator(int index),False
1,MLet,1,boolean add(E e),False
1,MLet,2,"void add(int index, E element)",False
1,MLet,3,boolean addAll(Collection<? extends E> c),False
1,MLet,4,"boolean addAll(int index, Collection<? extends E> c)",False
1,MLet,5,void clear(),False
2,MLetContent,1,boolean add(E e),False
2,MLetContent,2,"void add(int index, E element)",False
2,MLetContent,3,boolean addAll(Collection<? extends E> c),False
2,MLetContent,4,"boolean addAll(int index, Collection<? extends E> c)",False
2,MLetContent,5,void clear(),False
3,PrivateMLet,1,boolean add(E e),False
3,PrivateMLet,2,"void add(int index, E element)",False
3,PrivateMLet,3,boolean addAll(Collection<? extends E> c),False
3,PrivateMLet,4,"boolean addAll(int index, Collection<? extends E> c)",False
3,PrivateMLet,5,void clear(),False
