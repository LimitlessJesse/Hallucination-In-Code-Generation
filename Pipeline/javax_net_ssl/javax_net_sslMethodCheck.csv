Sample Number,ClassName,Snippet Number,Method,Exist
0,CertPathTrustManagerParameters,1,CertPathTrustManagerParameters(),False
0,CertPathTrustManagerParameters,2,getCertPath(),False
0,CertPathTrustManagerParameters,3,getTrustManagers(),False
0,CertPathTrustManagerParameters,4,setCertPath(CertPath certPath),False
0,CertPathTrustManagerParameters,5,setTrustManagers(TrustManager[] trustManagers),False
1,ExtendedSSLSession,1,getCipherSuite(),False
1,ExtendedSSLSession,2,getLocalCertificates(),False
1,ExtendedSSLSession,3,getPeerCertificates(),False
1,ExtendedSSLSession,4,getPeerPrincipal(),False
1,ExtendedSSLSession,5,getPeerPrincipal(),False
1,ExtendedSSLSession,6,getPeerCertificateChain(),False
1,ExtendedSSLSession,7,getPeerCertificate(),False
1,ExtendedSSLSession,8,getPeerCertificateAlias(),False
1,ExtendedSSLSession,9,getPeerCertificateSerialNumber(),False
1,ExtendedSSLSession,10,getPeerCertificateNotBefore(),False
1,ExtendedSSLSession,11,getPeerCertificateNotAfter(),False
1,ExtendedSSLSession,12,getPeerCertificateIssuerDN(),False
1,ExtendedSSLSession,13,getPeerCertificateSubjectDN(),False
1,ExtendedSSLSession,14,getPeerCertificateIssuerAlternativeNames(),False
1,ExtendedSSLSession,15,getPeerCertificateSubjectAlternativeNames(),False
1,ExtendedSSLSession,16,getPeerCertificateKeyTypes(),False
1,ExtendedSSLSession,17,getPeerCertificateKeyAlgorithms(),False
1,ExtendedSSLSession,18,getPeerCertificateSignatureAlgorithms(),False
1,ExtendedSSLSession,19,getPeerCertificateExtendedKeyUsage(),False
1,ExtendedSSLSession,20,getPeerCertificateBasicConstraints(),False
1,ExtendedSSLSession,21,getPeerCertificateNameConstraints(),False
1,ExtendedSSLSession,22,getPeerCertificateAuthorityKeyIdentifier(),False
1,ExtendedSSLSession,23,getPeerCertificateSubjectKeyIdentifier(),False
1,ExtendedSSLSession,24,getPeerCertificateSerialNumberString(),False
1,ExtendedSSLSession,25,getPeerCertificateNotBeforeDate(),False
1,ExtendedSSLSession,26,getPeerCertificateNotAfterDate(),False
1,ExtendedSSLSession,27,getPeerCertificateIssuerDNString(),False
1,ExtendedSSLSession,28,getPeerCertificateSubjectDNString(),False
1,ExtendedSSLSession,29,getPeerCertificateIssuerAlternativeNamesString(),False
1,ExtendedSSLSession,30,getPeerCertificateSubjectAlternativeNamesString(),False
1,ExtendedSSLSession,31,getPeerCertificateKeyTypesString(),False
1,ExtendedSSLSession,32,getPeerCertificateKeyAlgorithmsString(),False
1,ExtendedSSLSession,33,getPeerCertificateSignatureAlgorithmsString(),False
1,ExtendedSSLSession,34,getPeerCertificateExtendedKeyUsageString(),False
1,ExtendedSSLSession,35,getPeerCertificateBasicConstraintsString(),False
1,ExtendedSSLSession,36,getPeerCertificateNameConstraintsString(),False
1,ExtendedSSLSession,37,getPeerCertificateAuthorityKeyIdentifierString(),False
1,ExtendedSSLSession,38,getPeerCertificateSubjectKeyIdentifierString(),False
1,ExtendedSSLSession,39,getPeerCertificateSerialNumberHexString(),False
1,ExtendedSSLSession,40,getPeerCertificateNotBeforeHexString(),False
1,ExtendedSSLSession,41,getPeerCertificateNotAfterHexString(),False
1,ExtendedSSLSession,42,getPeerCertificateIssuerDNHexString(),False
1,ExtendedSSLSession,43,getPeerCertificateSubjectDNHexString(),False
1,ExtendedSSLSession,44,getPeerCertificateIssuerAlternativeNamesHexString(),False
1,ExtendedSSLSession,45,getPeerCertificateSubjectAlternativeNamesHexString(),False
1,ExtendedSSLSession,46,getPeerCertificateKeyTypesHexString(),False
2,HandshakeCompletedEvent,1,getHandshakeCompletedEvent(),False
2,HandshakeCompletedEvent,2,getSession(),False
2,HandshakeCompletedEvent,3,getLocalCertificateChain(),False
2,HandshakeCompletedEvent,4,getLocalPrincipal(),False
2,HandshakeCompletedEvent,5,getPeerCertificateChain(),False
2,HandshakeCompletedEvent,6,getPeerPrincipal(),False
2,HandshakeCompletedEvent,7,getCipherSuite(),False
2,HandshakeCompletedEvent,8,getHandshakeStatus(),False
2,HandshakeCompletedEvent,9,getLocalCertificate(),False
2,HandshakeCompletedEvent,10,getPeerCertificate(),False
3,HttpsURLConnection,1,void setSSLSocketFactory(SSLSocketFactory factory),True
3,HttpsURLConnection,2,void setHostnameVerifier(HostnameVerifier verifier),True
3,HttpsURLConnection,3,void setDefaultHostnameVerifier(HostnameVerifier verifier),True
3,HttpsURLConnection,4,void setDefaultSSLSocketFactory(SSLSocketFactory factory),True
3,HttpsURLConnection,5,void setRequestMethod(String method),False
4,KeyManagerFactory,1,KeyManagerFactory.getInstance(String algorithm),False
4,KeyManagerFactory,2,"void init(KeyStore keystore, char[] password)",True
4,KeyManagerFactory,3,void init(ManagerFactoryParameters spec),True
4,KeyManagerFactory,4,KeyManager[] getKeyManagers(),True
4,KeyManagerFactory,5,TrustManager[] getTrustManagers(),False
5,KeyManagerFactorySpi,1,KeyManagerFactorySpi(),False
5,KeyManagerFactorySpi,2,init(KeyManagerFactorySpi kmf),False
5,KeyManagerFactorySpi,3,"init(KeyManager[] keyManagers, char[] password)",False
5,KeyManagerFactorySpi,4,"init(KeyManager[] keyManagers, SecureRandom random)",False
5,KeyManagerFactorySpi,5,"init(KeyManager[] keyManagers, KeyStore keyStore, char[] password)",False
5,KeyManagerFactorySpi,6,"init(KeyManager[] keyManagers, KeyStore keyStore, char[] password, SecureRandom random)",False
5,KeyManagerFactorySpi,7,getKeyManagers(),False
5,KeyManagerFactorySpi,8,getTrustManagers(),False
5,KeyManagerFactorySpi,9,getAlgorithm(),False
5,KeyManagerFactorySpi,10,getProvider(),False
5,KeyManagerFactorySpi,11,getKeyManagerFactorySpi(),False
5,KeyManagerFactorySpi,12,getKeyManagerFactorySpi(KeyManagerFactorySpi kmf),False
5,KeyManagerFactorySpi,13,"getKeyManagerFactorySpi(KeyManager[] keyManagers, char[] password)",False
5,KeyManagerFactorySpi,14,"getKeyManagerFactorySpi(KeyManager[] keyManagers, SecureRandom random)",False
5,KeyManagerFactorySpi,15,"getKeyManagerFactorySpi(KeyManager[] keyManagers, KeyStore keyStore, char[] password)",False
5,KeyManagerFactorySpi,16,"getKeyManagerFactorySpi(KeyManager[] keyManagers, KeyStore keyStore, char[] password, SecureRandom random)",False
6,KeyStoreBuilderParameters,1,boolean isKeyEncrypted(),False
6,KeyStoreBuilderParameters,2,boolean isKeyEntry(String alias),False
6,KeyStoreBuilderParameters,3,"boolean isKeyEntry(String alias, String password)",False
6,KeyStoreBuilderParameters,4,"boolean isKeyEntry(String alias, char[] password)",False
6,KeyStoreBuilderParameters,5,"boolean isKeyEntry(String alias, String password, char[] protectionParameter)",False
7,SNIHostName,1,boolean setSNIHostName(String hostname),False
7,SNIHostName,2,String getSNIHostName(),False
7,SNIHostName,3,void setSNIHostName(SNIHostName hostname),False
7,SNIHostName,4,SNIHostName getSNIHostName(),False
7,SNIHostName,5,void setSNIHostName(String[] hostnames),False
8,SNIMatcher,1,boolean matches(String hostname),False
8,SNIMatcher,2,boolean matches(String[] hostnames),False
8,SNIMatcher,3,boolean matches(List<String> hostnames),False
8,SNIMatcher,4,"boolean matches(String hostname, SSLSession sslSession)",False
8,SNIMatcher,5,"boolean matches(String[] hostnames, SSLSession sslSession)",False
8,SNIMatcher,6,"boolean matches(List<String> hostnames, SSLSession sslSession)",False
9,SNIServerName,1,boolean contains(Object o),False
9,SNIServerName,2,boolean remove(Object o),False
9,SNIServerName,3,boolean removeAll(Collection<?> c),False
9,SNIServerName,4,boolean retainAll(Collection<?> c),False
9,SNIServerName,5,boolean addAll(Collection<? extends E> c),False
10,SSLContext,1,SSLContext.getInstance(String protocol),False
10,SSLContext,2,"SSLContext.getInstance(String protocol, String provider)",False
10,SSLContext,3,"SSLContext.getInstance(String protocol, String provider, ProviderConfiguration configuration)",False
10,SSLContext,4,"SSLContext.getInstance(String protocol, String provider, ProviderConfiguration configuration, ClassLoader loader)",False
10,SSLContext,5,"SSLContext.getInstance(String protocol, String provider, ClassLoader loader)",False
11,SSLContextSpi,1,SSLContextSpi(),False
11,SSLContextSpi,2,"void init(KeyManager[] var1, TrustManager[] var2, SecureRandom var3)",False
11,SSLContextSpi,3,SSLContext createSSLContext(),False
11,SSLContextSpi,4,SSLEngine createSSLEngine(),False
11,SSLContextSpi,5,"SSLEngine createSSLEngine(String var1, int var2)",False
12,SSLEngine,1,SSLEngine.setUseClientMode(boolean mode),False
12,SSLEngine,2,SSLEngine.setEnabledCipherSuites(String[] suites),False
12,SSLEngine,3,SSLEngine.setEnabledProtocols(String[] protocols),False
12,SSLEngine,4,SSLEngine.beginHandshake(),False
12,SSLEngine,5,SSLEngine.getSession(),False
12,SSLEngine,6,SSLEngine.getHandshakeStatus(),False
12,SSLEngine,7,SSLEngine.getPeerCertificates(),False
12,SSLEngine,8,SSLEngine.getSession(),False
12,SSLEngine,9,SSLEngine.getHandshakeStatus(),False
12,SSLEngine,10,SSLEngine.getPeerCertificates(),False
12,SSLEngine,11,SSLEngine.getSession(),False
12,SSLEngine,12,SSLEngine.getHandshakeStatus(),False
12,SSLEngine,13,SSLEngine.getPeerCertificates(),False
12,SSLEngine,14,SSLEngine.getSession(),False
12,SSLEngine,15,SSLEngine.getHandshakeStatus(),False
12,SSLEngine,16,SSLEngine.getPeerCertificates(),False
12,SSLEngine,17,SSLEngine.getSession(),False
12,SSLEngine,18,SSLEngine.getHandshakeStatus(),False
12,SSLEngine,19,SSLEngine.getPeerCertificates(),False
12,SSLEngine,20,SSLEngine.getSession(),False
12,SSLEngine,21,SSLEngine.getHandshakeStatus(),False
12,SSLEngine,22,SSLEngine.getPeerCertificates(),False
12,SSLEngine,23,SSLEngine.getSession(),False
12,SSLEngine,24,SSLEngine.getHandshakeStatus(),False
12,SSLEngine,25,SSLEngine.getPeerCertificates(),False
13,SSLEngineResult,1,SSLEngineResult.getHandshakeStatus(),False
13,SSLEngineResult,2,SSLEngineResult.getStatus(),False
13,SSLEngineResult,3,SSLEngineResult.getBytesConsumed(),False
13,SSLEngineResult,4,SSLEngineResult.getBytesProduced(),False
13,SSLEngineResult,5,SSLEngineResult.getHandshakeByteCount(),False
14,SSLParameters,1,SSLParameters(),False
14,SSLParameters,2,setCipherSuites(String[] cipherSuites),False
14,SSLParameters,3,getCipherSuites(),False
14,SSLParameters,4,setProtocols(String[] protocols),False
14,SSLParameters,5,getProtocols(),False
15,SSLPermission,1,"boolean checkConnect(String target, int port, String host)",False
15,SSLPermission,2,"boolean checkConnect(String target, int port)",False
15,SSLPermission,3,"boolean checkAccept(String target, int port, String host)",False
15,SSLPermission,4,"boolean checkAccept(String target, int port)",False
15,SSLPermission,5,"boolean checkConnect(String target, String host)",False
15,SSLPermission,6,"boolean checkAccept(String target, String host)",False
15,SSLPermission,7,boolean checkConnect(String target),False
15,SSLPermission,8,boolean checkAccept(String target),False
15,SSLPermission,9,"boolean checkConnect(int port, String host)",False
15,SSLPermission,10,"boolean checkAccept(int port, String host)",False
15,SSLPermission,11,boolean checkConnect(int port),False
15,SSLPermission,12,boolean checkAccept(int port),False
15,SSLPermission,13,boolean checkConnect(String host),False
15,SSLPermission,14,boolean checkAccept(String host),False
15,SSLPermission,15,boolean checkConnect(),False
15,SSLPermission,16,boolean checkAccept(),False
16,SSLServerSocket,1,SSLServerSocket(int port),False
16,SSLServerSocket,2,"SSLServerSocket(int port, int backlog)",False
16,SSLServerSocket,3,"SSLServerSocket(int port, int backlog, InetAddress bindAddr)",False
16,SSLServerSocket,4,"SSLServerSocket(int port, int backlog, InetAddress bindAddr, int recvBufSize)",False
16,SSLServerSocket,5,"SSLServerSocket(int port, int backlog, InetAddress bindAddr, int recvBufSize, int sendBufSize)",False
17,SSLServerSocketFactory,1,SSLServerSocketFactory(),False
17,SSLServerSocketFactory,2,"SSLServerSocketFactory(KeyManager[] km, TrustManager[] tm)",False
17,SSLServerSocketFactory,3,"SSLServerSocketFactory(KeyManager[] km, TrustManager[] tm, SecureRandom sr)",False
17,SSLServerSocketFactory,4,SSLServerSocket createServerSocket(int port),False
17,SSLServerSocketFactory,5,"SSLServerSocket createServerSocket(int port, int backlog)",False
18,SSLSessionBindingEvent,1,getSession(),False
18,SSLSessionBindingEvent,2,getName(),False
18,SSLSessionBindingEvent,3,getValue(),False
18,SSLSessionBindingEvent,4,getSource(),False
18,SSLSessionBindingEvent,5,getSession(),False
19,SSLSocket,1,"SSLContext getContext(String protocol, KeyManager[] keyManagers, TrustManager[] trustManagers)",False
19,SSLSocket,2,"SSLContext getContext(String protocol, KeyManagerFactory kmf, TrustManagerFactory tmf)",False
19,SSLSocket,3,SSLContext getInstance(String protocol),False
19,SSLSocket,4,"SSLContext getInstance(String protocol, String provider)",False
19,SSLSocket,5,"SSLContext getInstance(String protocol, Provider provider)",False
20,SSLSocketFactory,1,SSLSocketFactory.getDefault(),False
20,SSLSocketFactory,2,"SSLSocketFactory.getDefault(int port, InetAddress host)",False
20,SSLSocketFactory,3,"SSLSocketFactory.getDefault(int port, String host)",False
20,SSLSocketFactory,4,SSLSocketFactory.getDefault(String host),False
20,SSLSocketFactory,5,SSLSocketFactory.getDefault(InetAddress host),False
21,StandardConstants,1,SSLParameters getSupportedSSLParameters(),False
21,StandardConstants,2,SSLParameters getDefaultSSLParameters(),False
21,StandardConstants,3,SSLParameters getSSLParameters(),False
21,StandardConstants,4,void setSSLParameters(SSLParameters params),False
21,StandardConstants,5,void setNeedClientAuth(boolean need),False
22,TrustManagerFactory,1,TrustManagerFactory.getInstance(String algorithm),False
22,TrustManagerFactory,2,TrustManagerFactory.getTrustManagers(),False
22,TrustManagerFactory,3,TrustManagerFactory.init(KeyStore keystore),False
22,TrustManagerFactory,4,"TrustManagerFactory.init(KeyStore keystore, char[] password)",False
22,TrustManagerFactory,5,TrustManagerFactory.init(ManagerFactoryParameters spec),False
23,TrustManagerFactorySpi,1,TrustManagerFactorySpi(),False
23,TrustManagerFactorySpi,2,init(KeyStore keystore),False
23,TrustManagerFactorySpi,3,getTrustManagers(),False
23,TrustManagerFactorySpi,4,engineGetTrustManagers(),False
23,TrustManagerFactorySpi,5,engineInit(KeyStore keystore),False
24,X509ExtendedKeyManager,1,getCertificateChain(String alias),False
24,X509ExtendedKeyManager,2,getPrivateKey(String alias),False
24,X509ExtendedKeyManager,3,"chooseClientAlias(String[] keyType, Principal[] issuers, Socket socket)",False
24,X509ExtendedKeyManager,4,"chooseServerAlias(String keyType, Principal[] issuers, Socket socket)",False
24,X509ExtendedKeyManager,5,getCertificateChain(String alias),False
25,X509ExtendedTrustManager,1,"void checkClientTrusted(X509Certificate[] chain, String authType)",False
25,X509ExtendedTrustManager,2,"void checkServerTrusted(X509Certificate[] chain, String authType)",False
25,X509ExtendedTrustManager,3,X509Certificate[] getAcceptedIssuers(),False
25,X509ExtendedTrustManager,4,"void checkClientTrusted(X509Certificate[] chain, String authType, Socket socket)",True
25,X509ExtendedTrustManager,5,"void checkServerTrusted(X509Certificate[] chain, String authType, Socket socket)",True
25,X509ExtendedTrustManager,6,"void checkClientTrusted(X509Certificate[] chain, String authType, SSLEngine engine)",True
25,X509ExtendedTrustManager,7,"void checkServerTrusted(X509Certificate[] chain, String authType, SSLEngine engine)",True
25,X509ExtendedTrustManager,8,"void checkClientTrusted(X509Certificate[] chain, String authType, SSLEngine sslEngine, Principal peerPrincipal)",False
25,X509ExtendedTrustManager,9,"void checkServerTrusted(X509Certificate[] chain, String authType, SSLEngine sslEngine, Principal peerPrincipal)",False
25,X509ExtendedTrustManager,10,"void checkClientTrusted(X509Certificate[] chain, String authType, SSLEngine sslEngine, Principal peerPrincipal, CertPath certPath)",False
25,X509ExtendedTrustManager,11,"void checkServerTrusted(X509Certificate[] chain, String authType, SSLEngine sslEngine, Principal peerPrincipal, CertPath certPath)",False
25,X509ExtendedTrustManager,12,"void checkClientTrusted(X509Certificate[] chain, String authType, SSLEngine sslEngine, Principal peerPrincipal, CertPath certPath, CertPathParameters certPathParameters)",False
25,X509ExtendedTrustManager,13,"void checkServerTrusted(X509Certificate[] chain, String authType, SSLEngine sslEngine, Principal peerPrincipal, CertPath certPath, CertPathParameters certPathParameters)",False
