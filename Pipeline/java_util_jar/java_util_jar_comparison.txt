Sample: 0 Attributes
----------------------------------------------------------------

@@ Instruction
I want to use java.util.jar.Attributes package from Java
recommend a list of useful with at most 5 apis for this package, exlclude method inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean contains(Object o)`: This method returns true if this list contains the specified element.

2. `boolean containsAll(Collection<?> c)`: This method returns true if this list contains all of the elements of the specified collection.

3. `boolean isEmpty()`: This method returns true if this list contains no elements.

4. `int size()`: This method returns the number of elements in this list.

5. `Object get(int index)`: This method returns the element at the specified position in this list.
================================================================

Sample: 1 Attributes.Name
----------------------------------------------------------------

@@ Instruction
I want to use java.util.jar.Attributes.Name package from Java
recommend a list of useful with at most 5 apis for this package, exlclude method inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean contains(Object o)`: This method returns true if this list contains the specified element.

2. `boolean isEmpty()`: This method returns true if this list contains no elements.

3. `int size()`: This method returns the number of elements in this list.

4. `Object get(int index)`: This method returns the element at the specified position in this list.

5. `Object set(int index, Object element)`: This method replaces the element at the specified position in this list with the specified element.
================================================================

Sample: 2 JarEntry
----------------------------------------------------------------

@@ Instruction
I want to use java.util.jar.JarEntry package from Java
recommend a list of useful with at most 5 apis for this package, exlclude method inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean add(E e)`: This method appends the specified element to the end of this list.
2. `E get(int index)`: This method returns the element at the specified position in this list.
3. `E remove(int index)`: This method removes the element at the specified position in this list.
4. `int size()`: This method returns the number of elements in this list.
5. `boolean isEmpty()`: This method returns true if this list contains no elements.
================================================================

Sample: 3 JarFile
----------------------------------------------------------------

@@ Instruction
I want to use java.util.jar.JarFile package from Java
recommend a list of useful with at most 5 apis for this package, exlclude method inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `JarFile(File file)`: This constructor creates a new JarFile instance for the specified file.

2. `Enumeration<JarEntry> entries()`: This method returns an Enumeration of JarEntry objects.

3. `Manifest getManifest()`: This method returns the Manifest of this JarFile.

4. `InputStream getInputStream(JarEntry e)`: This method returns an InputStream for reading the data of the specified JarEntry.

5. `JarEntry getJarEntry(String name)`: This method returns the JarEntry for the specified name.
================================================================

Sample: 4 JarInputStream
----------------------------------------------------------------

@@ Instruction
I want to use java.util.jar.JarInputStream package from Java
recommend a list of useful with at most 5 apis for this package, exlclude method inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `JarInputStream(InputStream in)`: This constructor creates a JarInputStream for the specified InputStream.

2. `JarEntry getNextJarEntry()`: This method returns the next entry in the jar file.

3. `void closeEntry()`: This method closes the current entry and positions the stream at the next entry.

4. `boolean getNextEntry()`: This method returns the next ZipEntry in the ZipFile.

5. `void close()`: This method closes the JarInputStream and the underlying InputStream.
================================================================

Sample: 5 JarOutputStream
----------------------------------------------------------------

@@ Instruction
I want to use java.util.jar.JarOutputStream package from Java
recommend a list of useful with at most 5 apis for this package, exlclude method inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `JarOutputStream(OutputStream out)`: This constructor creates a new JarOutputStream that writes to the specified output stream.

2. `void putNextEntry(JarEntry e)`: This method starts writing a new entry in the Jar file.

3. `void write(byte[] b, int off, int len)`: This method writes len bytes from the specified byte array starting at offset off to the current entry in the Jar file.

4. `void closeEntry()`: This method closes the current Jar entry and prepares for the next entry.

5. `void close()`: This method closes this JarOutputStream and the underlying OutputStream.
================================================================

Sample: 6 Manifest
----------------------------------------------------------------

@@ Instruction
I want to use java.util.jar.Manifest package from Java
recommend a list of useful with at most 5 apis for this package, exlclude method inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean add(E e)`: This method appends the specified element to the end of this list.
2. `boolean addAll(Collection<? extends E> c)`: This method appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator.
3. `void clear()`: This method removes all of the elements from this list.
4. `boolean contains(Object o)`: This method returns true if this list contains the specified element.
5. `boolean containsAll(Collection<?> c)`: This method returns true if this list contains all of the elements of the specified collection.

Note: The methods inherent from its parent class (`java.util.Collection`) are not included in the list.
================================================================

Sample: 7 Pack200
----------------------------------------------------------------

@@ Instruction
I want to use java.util.jar.Pack200 package from Java
recommend a list of useful with at most 5 apis for this package, exlclude method inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean add(E e)`: This method appends the specified element to the end of this list.
2. `void add(int index, E element)`: This method inserts the specified element at the specified position in this list.
3. `boolean addAll(Collection<? extends E> c)`: This method appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator.
4. `boolean addAll(int index, Collection<? extends E> c)`: This method inserts all of the elements in the specified collection into this list, starting at the specified position.
5. `void clear()`: This method removes all of the elements from this list.
================================================================

