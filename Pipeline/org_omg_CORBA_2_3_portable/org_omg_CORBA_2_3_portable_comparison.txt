Sample: 0 Delegate
----------------------------------------------------------------

@@ Instruction
I want to use org.omg.CORBA_2_3.portable.Delegate package from Java
recommend a list of useful with at most 5 apis for this package, exlclude method inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean add(E e)`: This method appends the specified element to the end of this list.
2. `void add(int index, E element)`: This method inserts the specified element at the specified position in this list.
3. `boolean addAll(Collection<? extends E> c)`: This method appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator.
4. `boolean remove(Object o)`: This method removes the first occurrence of the specified element from this list, if it is present.
5. `E remove(int index)`: This method removes the element at the specified position in this list.
================================================================

Sample: 1 InputStream
----------------------------------------------------------------

@@ Instruction
I want to use org.omg.CORBA_2_3.portable.InputStream package from Java
recommend a list of useful with at most 5 apis for this package, exlclude method inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `read_boolean()`: This method reads a boolean value from the input stream.
2. `read_char()`: This method reads a character value from the input stream.
3. `read_octet()`: This method reads an octet value from the input stream.
4. `read_short()`: This method reads a short value from the input stream.
5. `read_long()`: This method reads a long value from the input stream.
6. `read_float()`: This method reads a float value from the input stream.
7. `read_double()`: This method reads a double value from the input stream.
8. `read_string()`: This method reads a string value from the input stream.
9. `read_wstring()`: This method reads a wide string value from the input stream.
10. `read_longlong()`: This method reads a long long value from the input stream.
11. `read_ulong()`: This method reads an unsigned long value from the input stream.
12. `read_ulonglong()`: This method reads an unsigned long long value from the input stream.
13. `read_longdouble()`: This method reads a long double value from the input stream.
14. `read_typecode()`: This method reads a type code value from the input stream.
15. `read_fixed()`: This method reads a fixed value from the input stream.
16. `read_value()`: This method reads a value from the input stream.
17. `read_abstract_interface()`: This method reads an abstract interface value from the input stream.
18. `read_abstract_interface_type()`: This method reads an abstract interface type value from the input stream.
19. `read_abstract_interface_ptr()`: This method reads an abstract interface pointer value from the input stream.
20. `read_abstract_interface_ref()`: This method reads an abstract interface reference value from the input stream.
21. `read_abstract_interface_any()`: This method reads an abstract interface any value from the input stream.
22. `read_abstract_interface_any_scope()`: This method reads an abstract interface any scope value from the input stream.
23. `read_abstract_interface_any_value()`: This method reads an abstract interface any value value from the input stream.
24. `read_abstract_interface_any_conversion()`: This method reads an abstract interface any conversion value from the input stream.
25. `read_abstract_interface_any_conversion_id()`: This method reads an abstract interface any conversion id value from the input stream.
26. `read_abstract_interface_any_conversion_value()`: This method reads an abstract interface any conversion value value from the input stream.
27. `read_abstract_interface_any_conversion_type()`: This method reads an abstract interface any conversion type value from the input stream.
28. `read_abstract_interface_any_conversion_type_id()`: This method reads an abstract interface any conversion type id value from the input stream.
29. `read_abstract_interface_any_conversion_type_scope()`: This method reads an abstract interface any conversion type scope value from the input stream.
30. `read_abstract_interface_any_conversion_type_value()`: This method reads an abstract interface any conversion type value value from the input stream.
31. `read_abstract_interface_any_conversion_type_conversion()`: This method reads an abstract interface any conversion type conversion value from the input stream.
32. `read_abstract_interface_any_conversion_type_conversion_id()`: This method reads an abstract interface any conversion type conversion id value from the input stream.
33. `read_abstract_interface_any_conversion_type_conversion_scope()`: This method reads an abstract interface any conversion type conversion scope value from the input stream.
34. `read_abstract_interface_any_conversion_type_conversion_value()`: This method reads an abstract interface any conversion type conversion value value from the input stream.
35. `read_abstract_interface_any_conversion_type_conversion_type()`: This method reads an abstract interface any conversion type conversion type value from the input stream.
36. `read_abstract_interface_any_conversion_type_conversion_type_id()`: This method reads an abstract interface any conversion type conversion type id value from the input stream.
37. `read_abstract_interface_any_conversion_type_conversion_type_scope()`: This method reads an abstract interface any conversion type conversion type scope value from the input stream.
38. `read_abstract_interface_any_conversion_type_conversion_type_value()`: This method reads an abstract interface any conversion type conversion type value value from the input stream.
39. `read_abstract_interface_any_conversion_type_conversion_type_conversion()`: This method reads an abstract interface any conversion type conversion type conversion value from the input stream.
40. `read_abstract_interface_any_conversion_type_conversion_type_conversion_id()`: This method reads an abstract interface any conversion type conversion type conversion id value from the input stream.
41. `read_abstract_interface_any_conversion_type_conversion_type_conversion_scope()`: This method reads an abstract interface any conversion type conversion type conversion scope value from the input stream.
42. `read_abstract_interface_any_conversion_type_conversion_type_conversion_value()`: This method reads an abstract interface any conversion type conversion type conversion value value from the input stream.
43. `read_abstract_interface_any_con
================================================================

Sample: 2 ObjectImpl
----------------------------------------------------------------

@@ Instruction
I want to use org.omg.CORBA_2_3.portable.ObjectImpl package from Java
recommend a list of useful with at most 5 apis for this package, exlclude method inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean add(E e)`: This method appends the specified element to the end of this list.
2. `void add(int index, E element)`: This method inserts the specified element at the specified position in this list.
3. `boolean addAll(Collection<? extends E> c)`: This method appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator.
4. `boolean remove(Object o)`: This method removes the first occurrence of the specified element from this list, if it is present.
5. `E remove(int index)`: This method removes the element at the specified position in this list.
================================================================

Sample: 3 OutputStream
----------------------------------------------------------------

@@ Instruction
I want to use org.omg.CORBA_2_3.portable.OutputStream package from Java
recommend a list of useful with at most 5 apis for this package, exlclude method inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `write_long(long)`: This method writes a long value to the output stream.
2. `write_ulong(long)`: This method writes an unsigned long value to the output stream.
3. `write_float(float)`: This method writes a float value to the output stream.
4. `write_double(double)`: This method writes a double value to the output stream.
5. `write_boolean(boolean)`: This method writes a boolean value to the output stream.
6. `write_char(char)`: This method writes a char value to the output stream.
7. `write_wchar(char)`: This method writes a wide char value to the output stream.
8. `write_octet(byte)`: This method writes an octet value to the output stream.
9. `write_short(short)`: This method writes a short value to the output stream.
10. `write_ushort(short)`: This method writes an unsigned short value to the output stream.
11. `write_longlong(long)`: This method writes a long long value to the output stream.
12. `write_ulonglong(long)`: This method writes an unsigned long long value to the output stream.
13. `write_longdouble(double)`: This method writes a long double value to the output stream.
14. `write_string(String)`: This method writes a string value to the output stream.
15. `write_wstring(String)`: This method writes a wide string value to the output stream.
16. `write_TypeCode(org.omg.CORBA.TypeCode)`: This method writes a TypeCode value to the output stream.
17. `write_Object(org.omg.CORBA.Object)`: This method writes an Object value to the output stream.
18. `write_Value(org.omg.CORBA.portable.ValueBase)`: This method writes a ValueBase value to the output stream.
19. `write_abstract_interface(org.omg.CORBA.portable.Streamable)`: This method writes an abstract interface value to the output stream.
20. `write_Value(org.omg.CORBA.portable.ValueBase)`: This method writes a ValueBase value to the output stream.
21. `write_Value(org.omg.CORBA.portable.ValueBase)`: This method writes a ValueBase value to the output stream.
22. `write_Value(org.omg.CORBA.portable.ValueBase)`: This method writes a ValueBase value to the output stream.
23. `write_Value(org.omg.CORBA.portable.ValueBase)`: This method writes a ValueBase value to the output stream.
24. `write_Value(org.omg.CORBA.portable.ValueBase)`: This method writes a ValueBase value to the output stream.
25. `write_Value(org.omg.CORBA.portable.ValueBase)`: This method writes a ValueBase value to the output stream.
================================================================

