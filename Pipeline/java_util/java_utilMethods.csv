ClassName,Method,Return Type
AbstractCollection,add(E e),boolean
AbstractCollection,addAll(Collection<? extends E> c),boolean
AbstractCollection,clear(),void
AbstractCollection,contains(Object o),boolean
AbstractCollection,containsAll(Collection<?> c),boolean
AbstractCollection,isEmpty(),boolean
AbstractCollection,iterator(),abstract Iterator<E>
AbstractCollection,remove(Object o),boolean
AbstractCollection,removeAll(Collection<?> c),boolean
AbstractCollection,retainAll(Collection<?> c),boolean
AbstractCollection,size(),abstract int
AbstractCollection,toArray(),Object[]
AbstractCollection,toArray(T[] a),<T> T[]
AbstractCollection,toString(),String
AbstractList,add(E e),boolean
AbstractList,"add(int index, E element)",void
AbstractList,"addAll(int index, Collection<? extends E> c)",boolean
AbstractList,clear(),void
AbstractList,equals(Object o),boolean
AbstractList,get(int index),abstract E
AbstractList,hashCode(),int
AbstractList,indexOf(Object o),int
AbstractList,iterator(),Iterator<E>
AbstractList,lastIndexOf(Object o),int
AbstractList,listIterator(),ListIterator<E>
AbstractList,listIterator(int index),ListIterator<E>
AbstractList,remove(int index),E
AbstractList,"removeRange(int fromIndex, int toIndex)",protected void
AbstractList,"set(int index, E element)",E
AbstractList,"subList(int fromIndex, int toIndex)",List<E>
AbstractMap,clear(),void
AbstractMap,clone(),protected Object
AbstractMap,containsKey(Object key),boolean
AbstractMap,containsValue(Object value),boolean
AbstractMap,entrySet(),"abstract Set<Map.Entry<K,V>>"
AbstractMap,equals(Object o),boolean
AbstractMap,get(Object key),V
AbstractMap,hashCode(),int
AbstractMap,isEmpty(),boolean
AbstractMap,keySet(),Set<K>
AbstractMap,"put(K key, V value)",V
AbstractMap,"putAll(Map<? extends K,? extends V> m)",void
AbstractMap,remove(Object key),V
AbstractMap,size(),int
AbstractMap,toString(),String
AbstractMap,values(),Collection<V>
AbstractMap.SimpleEntry,equals(Object o),boolean
AbstractMap.SimpleEntry,getKey(),K
AbstractMap.SimpleEntry,getValue(),V
AbstractMap.SimpleEntry,hashCode(),int
AbstractMap.SimpleEntry,setValue(V value),V
AbstractMap.SimpleEntry,toString(),String
AbstractMap.SimpleImmutableEntry,equals(Object o),boolean
AbstractMap.SimpleImmutableEntry,getKey(),K
AbstractMap.SimpleImmutableEntry,getValue(),V
AbstractMap.SimpleImmutableEntry,hashCode(),int
AbstractMap.SimpleImmutableEntry,setValue(V value),V
AbstractMap.SimpleImmutableEntry,toString(),String
AbstractQueue,add(E e),boolean
AbstractQueue,addAll(Collection<? extends E> c),boolean
AbstractQueue,clear(),void
AbstractQueue,element(),E
AbstractQueue,remove(),E
AbstractSequentialList,"add(int index, E element)",void
AbstractSequentialList,"addAll(int index, Collection<? extends E> c)",boolean
AbstractSequentialList,get(int index),E
AbstractSequentialList,iterator(),Iterator<E>
AbstractSequentialList,listIterator(int index),abstract ListIterator<E>
AbstractSequentialList,remove(int index),E
AbstractSequentialList,"set(int index, E element)",E
AbstractSet,equals(Object o),boolean
AbstractSet,hashCode(),int
AbstractSet,removeAll(Collection<?> c),boolean
ArrayDeque,add(E e),boolean
ArrayDeque,addFirst(E e),void
ArrayDeque,addLast(E e),void
ArrayDeque,clear(),void
ArrayDeque,clone(),ArrayDeque<E>
ArrayDeque,contains(Object o),boolean
ArrayDeque,descendingIterator(),Iterator<E>
ArrayDeque,element(),E
ArrayDeque,getFirst(),E
ArrayDeque,getLast(),E
ArrayDeque,isEmpty(),boolean
ArrayDeque,iterator(),Iterator<E>
ArrayDeque,offer(E e),boolean
ArrayDeque,offerFirst(E e),boolean
ArrayDeque,offerLast(E e),boolean
ArrayDeque,peek(),E
ArrayDeque,peekFirst(),E
ArrayDeque,peekLast(),E
ArrayDeque,poll(),E
ArrayDeque,pollFirst(),E
ArrayDeque,pollLast(),E
ArrayDeque,pop(),E
ArrayDeque,push(E e),void
ArrayDeque,remove(),E
ArrayDeque,remove(Object o),boolean
ArrayDeque,removeFirst(),E
ArrayDeque,removeFirstOccurrence(Object o),boolean
ArrayDeque,removeLast(),E
ArrayDeque,removeLastOccurrence(Object o),boolean
ArrayDeque,size(),int
ArrayDeque,spliterator(),Spliterator<E>
ArrayDeque,toArray(),Object[]
ArrayDeque,toArray(T[] a),<T> T[]
ArrayList,add(E e),boolean
ArrayList,"add(int index, E element)",void
ArrayList,addAll(Collection<? extends E> c),boolean
ArrayList,"addAll(int index, Collection<? extends E> c)",boolean
ArrayList,clear(),void
ArrayList,clone(),Object
ArrayList,contains(Object o),boolean
ArrayList,ensureCapacity(int minCapacity),void
ArrayList,forEach(Consumer<? super E> action),void
ArrayList,get(int index),E
ArrayList,indexOf(Object o),int
ArrayList,isEmpty(),boolean
ArrayList,iterator(),Iterator<E>
ArrayList,lastIndexOf(Object o),int
ArrayList,listIterator(),ListIterator<E>
ArrayList,listIterator(int index),ListIterator<E>
ArrayList,remove(int index),E
ArrayList,remove(Object o),boolean
ArrayList,removeAll(Collection<?> c),boolean
ArrayList,removeIf(Predicate<? super E> filter),boolean
ArrayList,"removeRange(int fromIndex, int toIndex)",protected void
ArrayList,replaceAll(UnaryOperator<E> operator),void
ArrayList,retainAll(Collection<?> c),boolean
ArrayList,"set(int index, E element)",E
ArrayList,size(),int
ArrayList,sort(Comparator<? super E> c),void
ArrayList,spliterator(),Spliterator<E>
ArrayList,"subList(int fromIndex, int toIndex)",List<E>
ArrayList,toArray(),Object[]
ArrayList,toArray(T[] a),<T> T[]
ArrayList,trimToSize(),void
Arrays,asList(T... a),static <T> List<T>
Arrays,"binarySearch(byte[] a, byte key)",static int
Arrays,"binarySearch(byte[] a, int fromIndex, int toIndex, byte key)",static int
Arrays,"binarySearch(char[] a, char key)",static int
Arrays,"binarySearch(char[] a, int fromIndex, int toIndex, char key)",static int
Arrays,"binarySearch(double[] a, double key)",static int
Arrays,"binarySearch(double[] a, int fromIndex, int toIndex, double key)",static int
Arrays,"binarySearch(float[] a, float key)",static int
Arrays,"binarySearch(float[] a, int fromIndex, int toIndex, float key)",static int
Arrays,"binarySearch(int[] a, int key)",static int
Arrays,"binarySearch(int[] a, int fromIndex, int toIndex, int key)",static int
Arrays,"binarySearch(long[] a, int fromIndex, int toIndex, long key)",static int
Arrays,"binarySearch(long[] a, long key)",static int
Arrays,"binarySearch(Object[] a, int fromIndex, int toIndex, Object key)",static int
Arrays,"binarySearch(Object[] a, Object key)",static int
Arrays,"binarySearch(short[] a, int fromIndex, int toIndex, short key)",static int
Arrays,"binarySearch(short[] a, short key)",static int
Arrays,"binarySearch(T[] a, int fromIndex, int toIndex, T key, Comparator<? super T> c)",static <T> int
Arrays,"binarySearch(T[] a, T key, Comparator<? super T> c)",static <T> int
Arrays,"copyOf(boolean[] original, int newLength)",static boolean[]
Arrays,"copyOf(byte[] original, int newLength)",static byte[]
Arrays,"copyOf(char[] original, int newLength)",static char[]
Arrays,"copyOf(double[] original, int newLength)",static double[]
Arrays,"copyOf(float[] original, int newLength)",static float[]
Arrays,"copyOf(int[] original, int newLength)",static int[]
Arrays,"copyOf(long[] original, int newLength)",static long[]
Arrays,"copyOf(short[] original, int newLength)",static short[]
Arrays,"copyOf(T[] original, int newLength)",static <T> T[]
Arrays,"copyOf(U[] original, int newLength, Class<? extends T[]> newType)","static <T,U> T[]"
Arrays,"copyOfRange(boolean[] original, int from, int to)",static boolean[]
Arrays,"copyOfRange(byte[] original, int from, int to)",static byte[]
Arrays,"copyOfRange(char[] original, int from, int to)",static char[]
Arrays,"copyOfRange(double[] original, int from, int to)",static double[]
Arrays,"copyOfRange(float[] original, int from, int to)",static float[]
Arrays,"copyOfRange(int[] original, int from, int to)",static int[]
Arrays,"copyOfRange(long[] original, int from, int to)",static long[]
Arrays,"copyOfRange(short[] original, int from, int to)",static short[]
Arrays,"copyOfRange(T[] original, int from, int to)",static <T> T[]
Arrays,"copyOfRange(U[] original, int from, int to, Class<? extends T[]> newType)","static <T,U> T[]"
Arrays,"deepEquals(Object[] a1, Object[] a2)",static boolean
Arrays,deepHashCode(Object[] a),static int
Arrays,deepToString(Object[] a),static String
Arrays,"equals(boolean[] a, boolean[] a2)",static boolean
Arrays,"equals(byte[] a, byte[] a2)",static boolean
Arrays,"equals(char[] a, char[] a2)",static boolean
Arrays,"equals(double[] a, double[] a2)",static boolean
Arrays,"equals(float[] a, float[] a2)",static boolean
Arrays,"equals(int[] a, int[] a2)",static boolean
Arrays,"equals(long[] a, long[] a2)",static boolean
Arrays,"equals(Object[] a, Object[] a2)",static boolean
Arrays,"equals(short[] a, short[] a2)",static boolean
Arrays,"fill(boolean[] a, boolean val)",static void
Arrays,"fill(boolean[] a, int fromIndex, int toIndex, boolean val)",static void
Arrays,"fill(byte[] a, byte val)",static void
Arrays,"fill(byte[] a, int fromIndex, int toIndex, byte val)",static void
Arrays,"fill(char[] a, char val)",static void
Arrays,"fill(char[] a, int fromIndex, int toIndex, char val)",static void
Arrays,"fill(double[] a, double val)",static void
Arrays,"fill(double[] a, int fromIndex, int toIndex, double val)",static void
Arrays,"fill(float[] a, float val)",static void
Arrays,"fill(float[] a, int fromIndex, int toIndex, float val)",static void
Arrays,"fill(int[] a, int val)",static void
Arrays,"fill(int[] a, int fromIndex, int toIndex, int val)",static void
Arrays,"fill(long[] a, int fromIndex, int toIndex, long val)",static void
Arrays,"fill(long[] a, long val)",static void
Arrays,"fill(Object[] a, int fromIndex, int toIndex, Object val)",static void
Arrays,"fill(Object[] a, Object val)",static void
Arrays,"fill(short[] a, int fromIndex, int toIndex, short val)",static void
Arrays,"fill(short[] a, short val)",static void
Arrays,hashCode(boolean[] a),static int
Arrays,hashCode(byte[] a),static int
Arrays,hashCode(char[] a),static int
Arrays,hashCode(double[] a),static int
Arrays,hashCode(float[] a),static int
Arrays,hashCode(int[] a),static int
Arrays,hashCode(long[] a),static int
Arrays,hashCode(Object[] a),static int
Arrays,hashCode(short[] a),static int
Arrays,"parallelPrefix(double[] array, DoubleBinaryOperator op)",static void
Arrays,"parallelPrefix(double[] array, int fromIndex, int toIndex, DoubleBinaryOperator op)",static void
Arrays,"parallelPrefix(int[] array, IntBinaryOperator op)",static void
Arrays,"parallelPrefix(int[] array, int fromIndex, int toIndex, IntBinaryOperator op)",static void
Arrays,"parallelPrefix(long[] array, int fromIndex, int toIndex, LongBinaryOperator op)",static void
Arrays,"parallelPrefix(long[] array, LongBinaryOperator op)",static void
Arrays,"parallelPrefix(T[] array, BinaryOperator<T> op)",static <T> void
Arrays,"parallelPrefix(T[] array, int fromIndex, int toIndex, BinaryOperator<T> op)",static <T> void
Arrays,"parallelSetAll(double[] array, IntToDoubleFunction generator)",static void
Arrays,"parallelSetAll(int[] array, IntUnaryOperator generator)",static void
Arrays,"parallelSetAll(long[] array, IntToLongFunction generator)",static void
Arrays,"parallelSetAll(T[] array, IntFunction<? extends T> generator)",static <T> void
Arrays,parallelSort(byte[] a),static void
Arrays,"parallelSort(byte[] a, int fromIndex, int toIndex)",static void
Arrays,parallelSort(char[] a),static void
Arrays,"parallelSort(char[] a, int fromIndex, int toIndex)",static void
Arrays,parallelSort(double[] a),static void
Arrays,"parallelSort(double[] a, int fromIndex, int toIndex)",static void
Arrays,parallelSort(float[] a),static void
Arrays,"parallelSort(float[] a, int fromIndex, int toIndex)",static void
Arrays,parallelSort(int[] a),static void
Arrays,"parallelSort(int[] a, int fromIndex, int toIndex)",static void
Arrays,parallelSort(long[] a),static void
Arrays,"parallelSort(long[] a, int fromIndex, int toIndex)",static void
Arrays,parallelSort(short[] a),static void
Arrays,"parallelSort(short[] a, int fromIndex, int toIndex)",static void
Arrays,parallelSort(T[] a),static <T extends Comparable<? super T>>void
Arrays,"parallelSort(T[] a, Comparator<? super T> cmp)",static <T> void
Arrays,"parallelSort(T[] a, int fromIndex, int toIndex)",static <T extends Comparable<? super T>>void
Arrays,"parallelSort(T[] a, int fromIndex, int toIndex, Comparator<? super T> cmp)",static <T> void
Arrays,"setAll(double[] array, IntToDoubleFunction generator)",static void
Arrays,"setAll(int[] array, IntUnaryOperator generator)",static void
Arrays,"setAll(long[] array, IntToLongFunction generator)",static void
Arrays,"setAll(T[] array, IntFunction<? extends T> generator)",static <T> void
Arrays,sort(byte[] a),static void
Arrays,"sort(byte[] a, int fromIndex, int toIndex)",static void
Arrays,sort(char[] a),static void
Arrays,"sort(char[] a, int fromIndex, int toIndex)",static void
Arrays,sort(double[] a),static void
Arrays,"sort(double[] a, int fromIndex, int toIndex)",static void
Arrays,sort(float[] a),static void
Arrays,"sort(float[] a, int fromIndex, int toIndex)",static void
Arrays,sort(int[] a),static void
Arrays,"sort(int[] a, int fromIndex, int toIndex)",static void
Arrays,sort(long[] a),static void
Arrays,"sort(long[] a, int fromIndex, int toIndex)",static void
Arrays,sort(Object[] a),static void
Arrays,"sort(Object[] a, int fromIndex, int toIndex)",static void
Arrays,sort(short[] a),static void
Arrays,"sort(short[] a, int fromIndex, int toIndex)",static void
Arrays,"sort(T[] a, Comparator<? super T> c)",static <T> void
Arrays,"sort(T[] a, int fromIndex, int toIndex, Comparator<? super T> c)",static <T> void
Arrays,spliterator(double[] array),static Spliterator.OfDouble
Arrays,"spliterator(double[] array, int startInclusive, int endExclusive)",static Spliterator.OfDouble
Arrays,spliterator(int[] array),static Spliterator.OfInt
Arrays,"spliterator(int[] array, int startInclusive, int endExclusive)",static Spliterator.OfInt
Arrays,spliterator(long[] array),static Spliterator.OfLong
Arrays,"spliterator(long[] array, int startInclusive, int endExclusive)",static Spliterator.OfLong
Arrays,spliterator(T[] array),static <T> Spliterator<T>
Arrays,"spliterator(T[] array, int startInclusive, int endExclusive)",static <T> Spliterator<T>
Arrays,stream(double[] array),static DoubleStream
Arrays,"stream(double[] array, int startInclusive, int endExclusive)",static DoubleStream
Arrays,stream(int[] array),static IntStream
Arrays,"stream(int[] array, int startInclusive, int endExclusive)",static IntStream
Arrays,stream(long[] array),static LongStream
Arrays,"stream(long[] array, int startInclusive, int endExclusive)",static LongStream
Arrays,stream(T[] array),static <T> Stream<T>
Arrays,"stream(T[] array, int startInclusive, int endExclusive)",static <T> Stream<T>
Arrays,toString(boolean[] a),static String
Arrays,toString(byte[] a),static String
Arrays,toString(char[] a),static String
Arrays,toString(double[] a),static String
Arrays,toString(float[] a),static String
Arrays,toString(int[] a),static String
Arrays,toString(long[] a),static String
Arrays,toString(Object[] a),static String
Arrays,toString(short[] a),static String
Base64,getDecoder(),static Base64.Decoder
Base64,getEncoder(),static Base64.Encoder
Base64,getMimeDecoder(),static Base64.Decoder
Base64,getMimeEncoder(),static Base64.Encoder
Base64,"getMimeEncoder(int lineLength, byte[] lineSeparator)",static Base64.Encoder
Base64,getUrlDecoder(),static Base64.Decoder
Base64,getUrlEncoder(),static Base64.Encoder
Base64.Decoder,decode(byte[] src),byte[]
Base64.Decoder,"decode(byte[] src, byte[] dst)",int
Base64.Decoder,decode(ByteBuffer buffer),ByteBuffer
Base64.Decoder,decode(String src),byte[]
Base64.Decoder,wrap(InputStream is),InputStream
Base64.Encoder,encode(byte[] src),byte[]
Base64.Encoder,"encode(byte[] src, byte[] dst)",int
Base64.Encoder,encode(ByteBuffer buffer),ByteBuffer
Base64.Encoder,encodeToString(byte[] src),String
Base64.Encoder,withoutPadding(),Base64.Encoder
Base64.Encoder,wrap(OutputStream os),OutputStream
BitSet,and(BitSet set),void
BitSet,andNot(BitSet set),void
BitSet,cardinality(),int
BitSet,clear(),void
BitSet,clear(int bitIndex),void
BitSet,"clear(int fromIndex, int toIndex)",void
BitSet,clone(),Object
BitSet,equals(Object obj),boolean
BitSet,flip(int bitIndex),void
BitSet,"flip(int fromIndex, int toIndex)",void
BitSet,get(int bitIndex),boolean
BitSet,"get(int fromIndex, int toIndex)",BitSet
BitSet,hashCode(),int
BitSet,intersects(BitSet set),boolean
BitSet,isEmpty(),boolean
BitSet,length(),int
BitSet,nextClearBit(int fromIndex),int
BitSet,nextSetBit(int fromIndex),int
BitSet,or(BitSet set),void
BitSet,previousClearBit(int fromIndex),int
BitSet,previousSetBit(int fromIndex),int
BitSet,set(int bitIndex),void
BitSet,"set(int bitIndex, boolean value)",void
BitSet,"set(int fromIndex, int toIndex)",void
BitSet,"set(int fromIndex, int toIndex, boolean value)",void
BitSet,size(),int
BitSet,stream(),IntStream
BitSet,toByteArray(),byte[]
BitSet,toLongArray(),long[]
BitSet,toString(),String
BitSet,valueOf(byte[] bytes),static BitSet
BitSet,valueOf(ByteBuffer bb),static BitSet
BitSet,valueOf(long[] longs),static BitSet
BitSet,valueOf(LongBuffer lb),static BitSet
BitSet,xor(BitSet set),void
Calendar,"add(int field, int amount)",abstract void
Calendar,after(Object when),boolean
Calendar,before(Object when),boolean
Calendar,clear(),void
Calendar,clear(int field),void
Calendar,clone(),Object
Calendar,compareTo(Calendar anotherCalendar),int
Calendar,complete(),protected void
Calendar,computeFields(),protected abstract void
Calendar,computeTime(),protected abstract void
Calendar,equals(Object obj),boolean
Calendar,get(int field),int
Calendar,getActualMaximum(int field),int
Calendar,getActualMinimum(int field),int
Calendar,getAvailableCalendarTypes(),static Set<String>
Calendar,getAvailableLocales(),static Locale[]
Calendar,getCalendarType(),String
Calendar,"getDisplayName(int field, int style, Locale locale)",String
Calendar,"getDisplayNames(int field, int style, Locale locale)","Map<String,Integer>"
Calendar,getFirstDayOfWeek(),int
Calendar,getGreatestMinimum(int field),abstract int
Calendar,getInstance(),static Calendar
Calendar,getInstance(Locale aLocale),static Calendar
Calendar,getInstance(TimeZone zone),static Calendar
Calendar,"getInstance(TimeZone zone, Locale aLocale)",static Calendar
Calendar,getLeastMaximum(int field),abstract int
Calendar,getMaximum(int field),abstract int
Calendar,getMinimalDaysInFirstWeek(),int
Calendar,getMinimum(int field),abstract int
Calendar,getTime(),Date
Calendar,getTimeInMillis(),long
Calendar,getTimeZone(),TimeZone
Calendar,getWeeksInWeekYear(),int
Calendar,getWeekYear(),int
Calendar,hashCode(),int
Calendar,internalGet(int field),protected int
Calendar,isLenient(),boolean
Calendar,isSet(int field),boolean
Calendar,isWeekDateSupported(),boolean
Calendar,"roll(int field, boolean up)",abstract void
Calendar,"roll(int field, int amount)",void
Calendar,"set(int field, int value)",void
Calendar,"set(int year, int month, int date)",void
Calendar,"set(int year, int month, int date, int hourOfDay, int minute)",void
Calendar,"set(int year, int month, int date, int hourOfDay, int minute, int second)",void
Calendar,setFirstDayOfWeek(int value),void
Calendar,setLenient(boolean lenient),void
Calendar,setMinimalDaysInFirstWeek(int value),void
Calendar,setTime(Date date),void
Calendar,setTimeInMillis(long millis),void
Calendar,setTimeZone(TimeZone value),void
Calendar,"setWeekDate(int weekYear, int weekOfYear, int dayOfWeek)",void
Calendar,toInstant(),Instant
Calendar,toString(),String
Calendar.Builder,build(),Calendar
Calendar.Builder,"set(int field, int value)",Calendar.Builder
Calendar.Builder,setCalendarType(String type),Calendar.Builder
Calendar.Builder,"setDate(int year, int month, int dayOfMonth)",Calendar.Builder
Calendar.Builder,setFields(int... fieldValuePairs),Calendar.Builder
Calendar.Builder,setInstant(Date instant),Calendar.Builder
Calendar.Builder,setInstant(long instant),Calendar.Builder
Calendar.Builder,setLenient(boolean lenient),Calendar.Builder
Calendar.Builder,setLocale(Locale locale),Calendar.Builder
Calendar.Builder,"setTimeOfDay(int hourOfDay, int minute, int second)",Calendar.Builder
Calendar.Builder,"setTimeOfDay(int hourOfDay, int minute, int second, int millis)",Calendar.Builder
Calendar.Builder,setTimeZone(TimeZone zone),Calendar.Builder
Calendar.Builder,"setWeekDate(int weekYear, int weekOfYear, int dayOfWeek)",Calendar.Builder
Calendar.Builder,"setWeekDefinition(int firstDayOfWeek, int minimalDaysInFirstWeek)",Calendar.Builder
Collections,"addAll(Collection<? super T> c, T... elements)",static <T> boolean
Collections,asLifoQueue(Deque<T> deque),static <T> Queue<T>
Collections,"binarySearch(List<? extends Comparable<? super T>> list, T key)",static <T> int
Collections,"binarySearch(List<? extends T> list, T key, Comparator<? super T> c)",static <T> int
Collections,"checkedCollection(Collection<E> c, Class<E> type)",static <E> Collection<E>
Collections,"checkedList(List<E> list, Class<E> type)",static <E> List<E>
Collections,"checkedMap(Map<K,V> m, Class<K> keyType, Class<V> valueType)","static <K,V> Map<K,V>"
Collections,"checkedNavigableMap(NavigableMap<K,V> m, Class<K> keyType, Class<V> valueType)","static <K,V> NavigableMap<K,V>"
Collections,"checkedNavigableSet(NavigableSet<E> s, Class<E> type)",static <E> NavigableSet<E>
Collections,"checkedQueue(Queue<E> queue, Class<E> type)",static <E> Queue<E>
Collections,"checkedSet(Set<E> s, Class<E> type)",static <E> Set<E>
Collections,"checkedSortedMap(SortedMap<K,V> m, Class<K> keyType, Class<V> valueType)","static <K,V> SortedMap<K,V>"
Collections,"checkedSortedSet(SortedSet<E> s, Class<E> type)",static <E> SortedSet<E>
Collections,"copy(List<? super T> dest, List<? extends T> src)",static <T> void
Collections,"disjoint(Collection<?> c1, Collection<?> c2)",static boolean
Collections,emptyEnumeration(),static <T> Enumeration<T>
Collections,emptyIterator(),static <T> Iterator<T>
Collections,emptyList(),static <T> List<T>
Collections,emptyListIterator(),static <T> ListIterator<T>
Collections,emptyMap(),"static <K,V> Map<K,V>"
Collections,emptyNavigableMap(),"static <K,V> NavigableMap<K,V>"
Collections,emptyNavigableSet(),static <E> NavigableSet<E>
Collections,emptySet(),static <T> Set<T>
Collections,emptySortedMap(),"static <K,V> SortedMap<K,V>"
Collections,emptySortedSet(),static <E> SortedSet<E>
Collections,enumeration(Collection<T> c),static <T> Enumeration<T>
Collections,"fill(List<? super T> list, T obj)",static <T> void
Collections,"frequency(Collection<?> c, Object o)",static int
Collections,"indexOfSubList(List<?> source, List<?> target)",static int
Collections,"lastIndexOfSubList(List<?> source, List<?> target)",static int
Collections,list(Enumeration<T> e),static <T> ArrayList<T>
Collections,max(Collection<? extends T> coll),static <T extends Object & Comparable<? super T>>T
Collections,"max(Collection<? extends T> coll, Comparator<? super T> comp)",static <T> T
Collections,min(Collection<? extends T> coll),static <T extends Object & Comparable<? super T>>T
Collections,"min(Collection<? extends T> coll, Comparator<? super T> comp)",static <T> T
Collections,"nCopies(int n, T o)",static <T> List<T>
Collections,"newSetFromMap(Map<E,Boolean> map)",static <E> Set<E>
Collections,"replaceAll(List<T> list, T oldVal, T newVal)",static <T> boolean
Collections,reverse(List<?> list),static void
Collections,reverseOrder(),static <T> Comparator<T>
Collections,reverseOrder(Comparator<T> cmp),static <T> Comparator<T>
Collections,"rotate(List<?> list, int distance)",static void
Collections,shuffle(List<?> list),static void
Collections,"shuffle(List<?> list, Random rnd)",static void
Collections,singleton(T o),static <T> Set<T>
Collections,singletonList(T o),static <T> List<T>
Collections,"singletonMap(K key, V value)","static <K,V> Map<K,V>"
Collections,sort(List<T> list),static <T extends Comparable<? super T>>void
Collections,"sort(List<T> list, Comparator<? super T> c)",static <T> void
Collections,"swap(List<?> list, int i, int j)",static void
Collections,synchronizedCollection(Collection<T> c),static <T> Collection<T>
Collections,synchronizedList(List<T> list),static <T> List<T>
Collections,"synchronizedMap(Map<K,V> m)","static <K,V> Map<K,V>"
Collections,"synchronizedNavigableMap(NavigableMap<K,V> m)","static <K,V> NavigableMap<K,V>"
Collections,synchronizedNavigableSet(NavigableSet<T> s),static <T> NavigableSet<T>
Collections,synchronizedSet(Set<T> s),static <T> Set<T>
Collections,"synchronizedSortedMap(SortedMap<K,V> m)","static <K,V> SortedMap<K,V>"
Collections,synchronizedSortedSet(SortedSet<T> s),static <T> SortedSet<T>
Collections,unmodifiableCollection(Collection<? extends T> c),static <T> Collection<T>
Collections,unmodifiableList(List<? extends T> list),static <T> List<T>
Collections,"unmodifiableMap(Map<? extends K,? extends V> m)","static <K,V> Map<K,V>"
Collections,"unmodifiableNavigableMap(NavigableMap<K,? extends V> m)","static <K,V> NavigableMap<K,V>"
Collections,unmodifiableNavigableSet(NavigableSet<T> s),static <T> NavigableSet<T>
Collections,unmodifiableSet(Set<? extends T> s),static <T> Set<T>
Collections,"unmodifiableSortedMap(SortedMap<K,? extends V> m)","static <K,V> SortedMap<K,V>"
Collections,unmodifiableSortedSet(SortedSet<T> s),static <T> SortedSet<T>
Currency,getAvailableCurrencies(),static Set<Currency>
Currency,getCurrencyCode(),String
Currency,getDefaultFractionDigits(),int
Currency,getDisplayName(),String
Currency,getDisplayName(Locale locale),String
Currency,getInstance(Locale locale),static Currency
Currency,getInstance(String currencyCode),static Currency
Currency,getNumericCode(),int
Currency,getSymbol(),String
Currency,getSymbol(Locale locale),String
Currency,toString(),String
Date,after(Date when),boolean
Date,before(Date when),boolean
Date,clone(),Object
Date,compareTo(Date anotherDate),int
Date,equals(Object obj),boolean
Date,from(Instant instant),static Date
Date,getDate(),int
Date,getDay(),int
Date,getHours(),int
Date,getMinutes(),int
Date,getMonth(),int
Date,getSeconds(),int
Date,getTime(),long
Date,getTimezoneOffset(),int
Date,getYear(),int
Date,hashCode(),int
Date,parse(String s),static long
Date,setDate(int date),void
Date,setHours(int hours),void
Date,setMinutes(int minutes),void
Date,setMonth(int month),void
Date,setSeconds(int seconds),void
Date,setTime(long time),void
Date,setYear(int year),void
Date,toGMTString(),String
Date,toInstant(),Instant
Date,toLocaleString(),String
Date,toString(),String
Date,"UTC(int year, int month, int date, int hrs, int min, int sec)",static long
Dictionary,elements(),abstract Enumeration<V>
Dictionary,get(Object key),abstract V
Dictionary,isEmpty(),abstract boolean
Dictionary,keys(),abstract Enumeration<K>
Dictionary,"put(K key, V value)",abstract V
Dictionary,remove(Object key),abstract V
Dictionary,size(),abstract int
DoubleSummaryStatistics,accept(double value),void
DoubleSummaryStatistics,combine(DoubleSummaryStatistics other),void
DoubleSummaryStatistics,getAverage(),double
DoubleSummaryStatistics,getCount(),long
DoubleSummaryStatistics,getMax(),double
DoubleSummaryStatistics,getMin(),double
DoubleSummaryStatistics,getSum(),double
DoubleSummaryStatistics,toString(),String
EnumMap,clear(),void
EnumMap,clone(),"EnumMap<K,V>"
EnumMap,containsKey(Object key),boolean
EnumMap,containsValue(Object value),boolean
EnumMap,entrySet(),"Set<Map.Entry<K,V>>"
EnumMap,equals(Object o),boolean
EnumMap,get(Object key),V
EnumMap,hashCode(),int
EnumMap,keySet(),Set<K>
EnumMap,"put(K key, V value)",V
EnumMap,"putAll(Map<? extends K,? extends V> m)",void
EnumMap,remove(Object key),V
EnumMap,size(),int
EnumMap,values(),Collection<V>
EnumSet,allOf(Class<E> elementType),static <E extends Enum<E>>EnumSet<E>
EnumSet,clone(),EnumSet<E>
EnumSet,complementOf(EnumSet<E> s),static <E extends Enum<E>>EnumSet<E>
EnumSet,copyOf(Collection<E> c),static <E extends Enum<E>>EnumSet<E>
EnumSet,copyOf(EnumSet<E> s),static <E extends Enum<E>>EnumSet<E>
EnumSet,noneOf(Class<E> elementType),static <E extends Enum<E>>EnumSet<E>
EnumSet,of(E e),static <E extends Enum<E>>EnumSet<E>
EnumSet,"of(E first, E... rest)",static <E extends Enum<E>>EnumSet<E>
EnumSet,"of(E e1, E e2)",static <E extends Enum<E>>EnumSet<E>
EnumSet,"of(E e1, E e2, E e3)",static <E extends Enum<E>>EnumSet<E>
EnumSet,"of(E e1, E e2, E e3, E e4)",static <E extends Enum<E>>EnumSet<E>
EnumSet,"of(E e1, E e2, E e3, E e4, E e5)",static <E extends Enum<E>>EnumSet<E>
EnumSet,"range(E from, E to)",static <E extends Enum<E>>EnumSet<E>
EventListenerProxy,getListener(),T
EventObject,getSource(),Object
EventObject,toString(),String
Formatter,close(),void
Formatter,flush(),void
Formatter,"format(Locale l, String format, Object... args)",Formatter
Formatter,"format(String format, Object... args)",Formatter
Formatter,ioException(),IOException
Formatter,locale(),Locale
Formatter,out(),Appendable
Formatter,toString(),String
GregorianCalendar,"add(int field, int amount)",void
GregorianCalendar,clone(),Object
GregorianCalendar,computeFields(),protected void
GregorianCalendar,computeTime(),protected void
GregorianCalendar,equals(Object obj),boolean
GregorianCalendar,from(ZonedDateTime zdt),static GregorianCalendar
GregorianCalendar,getActualMaximum(int field),int
GregorianCalendar,getActualMinimum(int field),int
GregorianCalendar,getCalendarType(),String
GregorianCalendar,getGreatestMinimum(int field),int
GregorianCalendar,getGregorianChange(),Date
GregorianCalendar,getLeastMaximum(int field),int
GregorianCalendar,getMaximum(int field),int
GregorianCalendar,getMinimum(int field),int
GregorianCalendar,getTimeZone(),TimeZone
GregorianCalendar,getWeeksInWeekYear(),int
GregorianCalendar,getWeekYear(),int
GregorianCalendar,hashCode(),int
GregorianCalendar,isLeapYear(int year),boolean
GregorianCalendar,isWeekDateSupported(),boolean
GregorianCalendar,"roll(int field, boolean up)",void
GregorianCalendar,"roll(int field, int amount)",void
GregorianCalendar,setGregorianChange(Date date),void
GregorianCalendar,setTimeZone(TimeZone zone),void
GregorianCalendar,"setWeekDate(int weekYear, int weekOfYear, int dayOfWeek)",void
GregorianCalendar,toZonedDateTime(),ZonedDateTime
HashMap,clear(),void
HashMap,clone(),Object
HashMap,"compute(K key, BiFunction<? super K,? super V,? extends V> remappingFunction)",V
HashMap,"computeIfAbsent(K key, Function<? super K,? extends V> mappingFunction)",V
HashMap,"computeIfPresent(K key, BiFunction<? super K,? super V,? extends V> remappingFunction)",V
HashMap,containsKey(Object key),boolean
HashMap,containsValue(Object value),boolean
HashMap,entrySet(),"Set<Map.Entry<K,V>>"
HashMap,"forEach(BiConsumer<? super K,? super V> action)",void
HashMap,get(Object key),V
HashMap,"getOrDefault(Object key, V defaultValue)",V
HashMap,isEmpty(),boolean
HashMap,keySet(),Set<K>
HashMap,"merge(K key, V value, BiFunction<? super V,? super V,? extends V> remappingFunction)",V
HashMap,"put(K key, V value)",V
HashMap,"putAll(Map<? extends K,? extends V> m)",void
HashMap,"putIfAbsent(K key, V value)",V
HashMap,remove(Object key),V
HashMap,"remove(Object key, Object value)",boolean
HashMap,"replace(K key, V value)",V
HashMap,"replace(K key, V oldValue, V newValue)",boolean
HashMap,"replaceAll(BiFunction<? super K,? super V,? extends V> function)",void
HashMap,size(),int
HashMap,values(),Collection<V>
HashSet,add(E e),boolean
HashSet,clear(),void
HashSet,clone(),Object
HashSet,contains(Object o),boolean
HashSet,isEmpty(),boolean
HashSet,iterator(),Iterator<E>
HashSet,remove(Object o),boolean
HashSet,size(),int
HashSet,spliterator(),Spliterator<E>
Hashtable,clear(),void
Hashtable,clone(),Object
Hashtable,"compute(K key, BiFunction<? super K,? super V,? extends V> remappingFunction)",V
Hashtable,"computeIfAbsent(K key, Function<? super K,? extends V> mappingFunction)",V
Hashtable,"computeIfPresent(K key, BiFunction<? super K,? super V,? extends V> remappingFunction)",V
Hashtable,contains(Object value),boolean
Hashtable,containsKey(Object key),boolean
Hashtable,containsValue(Object value),boolean
Hashtable,elements(),Enumeration<V>
Hashtable,entrySet(),"Set<Map.Entry<K,V>>"
Hashtable,equals(Object o),boolean
Hashtable,"forEach(BiConsumer<? super K,? super V> action)",void
Hashtable,get(Object key),V
Hashtable,"getOrDefault(Object key, V defaultValue)",V
Hashtable,hashCode(),int
Hashtable,isEmpty(),boolean
Hashtable,keys(),Enumeration<K>
Hashtable,keySet(),Set<K>
Hashtable,"merge(K key, V value, BiFunction<? super V,? super V,? extends V> remappingFunction)",V
Hashtable,"put(K key, V value)",V
Hashtable,"putAll(Map<? extends K,? extends V> t)",void
Hashtable,"putIfAbsent(K key, V value)",V
Hashtable,rehash(),protected void
Hashtable,remove(Object key),V
Hashtable,"remove(Object key, Object value)",boolean
Hashtable,"replace(K key, V value)",V
Hashtable,"replace(K key, V oldValue, V newValue)",boolean
Hashtable,"replaceAll(BiFunction<? super K,? super V,? extends V> function)",void
Hashtable,size(),int
Hashtable,toString(),String
Hashtable,values(),Collection<V>
IdentityHashMap,clear(),void
IdentityHashMap,clone(),Object
IdentityHashMap,containsKey(Object key),boolean
IdentityHashMap,containsValue(Object value),boolean
IdentityHashMap,entrySet(),"Set<Map.Entry<K,V>>"
IdentityHashMap,equals(Object o),boolean
IdentityHashMap,"forEach(BiConsumer<? super K,? super V> action)",void
IdentityHashMap,get(Object key),V
IdentityHashMap,hashCode(),int
IdentityHashMap,isEmpty(),boolean
IdentityHashMap,keySet(),Set<K>
IdentityHashMap,"put(K key, V value)",V
IdentityHashMap,"putAll(Map<? extends K,? extends V> m)",void
IdentityHashMap,remove(Object key),V
IdentityHashMap,"replaceAll(BiFunction<? super K,? super V,? extends V> function)",void
IdentityHashMap,size(),int
IdentityHashMap,values(),Collection<V>
IntSummaryStatistics,accept(int value),void
IntSummaryStatistics,combine(IntSummaryStatistics other),void
IntSummaryStatistics,getAverage(),double
IntSummaryStatistics,getCount(),long
IntSummaryStatistics,getMax(),int
IntSummaryStatistics,getMin(),int
IntSummaryStatistics,getSum(),long
IntSummaryStatistics,toString(),String
LinkedHashMap,clear(),void
LinkedHashMap,containsValue(Object value),boolean
LinkedHashMap,entrySet(),"Set<Map.Entry<K,V>>"
LinkedHashMap,"forEach(BiConsumer<? super K,? super V> action)",void
LinkedHashMap,get(Object key),V
LinkedHashMap,"getOrDefault(Object key, V defaultValue)",V
LinkedHashMap,keySet(),Set<K>
LinkedHashMap,"removeEldestEntry(Map.Entry<K,V> eldest)",protected boolean
LinkedHashMap,"replaceAll(BiFunction<? super K,? super V,? extends V> function)",void
LinkedHashMap,values(),Collection<V>
LinkedHashSet,spliterator(),Spliterator<E>
LinkedList,add(E e),boolean
LinkedList,"add(int index, E element)",void
LinkedList,addAll(Collection<? extends E> c),boolean
LinkedList,"addAll(int index, Collection<? extends E> c)",boolean
LinkedList,addFirst(E e),void
LinkedList,addLast(E e),void
LinkedList,clear(),void
LinkedList,clone(),Object
LinkedList,contains(Object o),boolean
LinkedList,descendingIterator(),Iterator<E>
LinkedList,element(),E
LinkedList,get(int index),E
LinkedList,getFirst(),E
LinkedList,getLast(),E
LinkedList,indexOf(Object o),int
LinkedList,lastIndexOf(Object o),int
LinkedList,listIterator(int index),ListIterator<E>
LinkedList,offer(E e),boolean
LinkedList,offerFirst(E e),boolean
LinkedList,offerLast(E e),boolean
LinkedList,peek(),E
LinkedList,peekFirst(),E
LinkedList,peekLast(),E
LinkedList,poll(),E
LinkedList,pollFirst(),E
LinkedList,pollLast(),E
LinkedList,pop(),E
LinkedList,push(E e),void
LinkedList,remove(),E
LinkedList,remove(int index),E
LinkedList,remove(Object o),boolean
LinkedList,removeFirst(),E
LinkedList,removeFirstOccurrence(Object o),boolean
LinkedList,removeLast(),E
LinkedList,removeLastOccurrence(Object o),boolean
LinkedList,"set(int index, E element)",E
LinkedList,size(),int
LinkedList,spliterator(),Spliterator<E>
LinkedList,toArray(),Object[]
LinkedList,toArray(T[] a),<T> T[]
ListResourceBundle,getContents(),protected abstract Object[][]
ListResourceBundle,getKeys(),Enumeration<String>
ListResourceBundle,handleGetObject(String key),Object
ListResourceBundle,handleKeySet(),protected Set<String>
Locale,clone(),Object
Locale,equals(Object obj),boolean
Locale,"filter(List<Locale.LanguageRange> priorityList, Collection<Locale> locales)",static List<Locale>
Locale,"filter(List<Locale.LanguageRange> priorityList, Collection<Locale> locales, Locale.FilteringMode mode)",static List<Locale>
Locale,"filterTags(List<Locale.LanguageRange> priorityList, Collection<String> tags)",static List<String>
Locale,"filterTags(List<Locale.LanguageRange> priorityList, Collection<String> tags, Locale.FilteringMode mode)",static List<String>
Locale,forLanguageTag(String languageTag),static Locale
Locale,getAvailableLocales(),static Locale[]
Locale,getCountry(),String
Locale,getDefault(),static Locale
Locale,getDefault(Locale.Category category),static Locale
Locale,getDisplayCountry(),String
Locale,getDisplayCountry(Locale inLocale),String
Locale,getDisplayLanguage(),String
Locale,getDisplayLanguage(Locale inLocale),String
Locale,getDisplayName(),String
Locale,getDisplayName(Locale inLocale),String
Locale,getDisplayScript(),String
Locale,getDisplayScript(Locale inLocale),String
Locale,getDisplayVariant(),String
Locale,getDisplayVariant(Locale inLocale),String
Locale,getExtension(char key),String
Locale,getExtensionKeys(),Set<Character>
Locale,getISO3Country(),String
Locale,getISO3Language(),String
Locale,getISOCountries(),static String[]
Locale,getISOLanguages(),static String[]
Locale,getLanguage(),String
Locale,getScript(),String
Locale,getUnicodeLocaleAttributes(),Set<String>
Locale,getUnicodeLocaleKeys(),Set<String>
Locale,getUnicodeLocaleType(String key),String
Locale,getVariant(),String
Locale,hasExtensions(),boolean
Locale,hashCode(),int
Locale,"lookup(List<Locale.LanguageRange> priorityList, Collection<Locale> locales)",static Locale
Locale,"lookupTag(List<Locale.LanguageRange> priorityList, Collection<String> tags)",static String
Locale,"setDefault(Locale.Category category, Locale newLocale)",static void
Locale,setDefault(Locale newLocale),static void
Locale,stripExtensions(),Locale
Locale,toLanguageTag(),String
Locale,toString(),String
Locale.Builder,addUnicodeLocaleAttribute(String attribute),Locale.Builder
Locale.Builder,build(),Locale
Locale.Builder,clear(),Locale.Builder
Locale.Builder,clearExtensions(),Locale.Builder
Locale.Builder,removeUnicodeLocaleAttribute(String attribute),Locale.Builder
Locale.Builder,"setExtension(char key, String value)",Locale.Builder
Locale.Builder,setLanguage(String language),Locale.Builder
Locale.Builder,setLanguageTag(String languageTag),Locale.Builder
Locale.Builder,setLocale(Locale locale),Locale.Builder
Locale.Builder,setRegion(String region),Locale.Builder
Locale.Builder,setScript(String script),Locale.Builder
Locale.Builder,"setUnicodeLocaleKeyword(String key, String type)",Locale.Builder
Locale.Builder,setVariant(String variant),Locale.Builder
Locale.LanguageRange,equals(Object obj),boolean
Locale.LanguageRange,getRange(),String
Locale.LanguageRange,getWeight(),double
Locale.LanguageRange,hashCode(),int
Locale.LanguageRange,"mapEquivalents(List<Locale.LanguageRange> priorityList, Map<String,List<String>> map)",static List<Locale.LanguageRange>
Locale.LanguageRange,parse(String ranges),static List<Locale.LanguageRange>
Locale.LanguageRange,"parse(String ranges, Map<String,List<String>> map)",static List<Locale.LanguageRange>
LongSummaryStatistics,accept(int value),void
LongSummaryStatistics,accept(long value),void
LongSummaryStatistics,combine(LongSummaryStatistics other),void
LongSummaryStatistics,getAverage(),double
LongSummaryStatistics,getCount(),long
LongSummaryStatistics,getMax(),long
LongSummaryStatistics,getMin(),long
LongSummaryStatistics,getSum(),long
LongSummaryStatistics,toString(),String
Objects,"compare(T a, T b, Comparator<? super T> c)",static <T> int
Objects,"deepEquals(Object a, Object b)",static boolean
Objects,"equals(Object a, Object b)",static boolean
Objects,hash(Object... values),static int
Objects,hashCode(Object o),static int
Objects,isNull(Object obj),static boolean
Objects,nonNull(Object obj),static boolean
Objects,requireNonNull(T obj),static <T> T
Objects,"requireNonNull(T obj, String message)",static <T> T
Objects,"requireNonNull(T obj, Supplier<String> messageSupplier)",static <T> T
Objects,toString(Object o),static String
Objects,"toString(Object o, String nullDefault)",static String
Observable,addObserver(Observer o),void
Observable,clearChanged(),protected void
Observable,countObservers(),int
Observable,deleteObserver(Observer o),void
Observable,deleteObservers(),void
Observable,hasChanged(),boolean
Observable,notifyObservers(),void
Observable,notifyObservers(Object arg),void
Observable,setChanged(),protected void
Optional,empty(),static <T> Optional<T>
Optional,equals(Object obj),boolean
Optional,filter(Predicate<? super T> predicate),Optional<T>
Optional,"flatMap(Function<? super T,Optional<U>> mapper)",<U> Optional<U>
Optional,get(),T
Optional,hashCode(),int
Optional,ifPresent(Consumer<? super T> consumer),void
Optional,isPresent(),boolean
Optional,"map(Function<? super T,? extends U> mapper)",<U> Optional<U>
Optional,of(T value),static <T> Optional<T>
Optional,ofNullable(T value),static <T> Optional<T>
Optional,orElse(T other),T
Optional,orElseGet(Supplier<? extends T> other),T
Optional,orElseThrow(Supplier<? extends X> exceptionSupplier),<X extends Throwable>T
Optional,toString(),String
OptionalDouble,empty(),static OptionalDouble
OptionalDouble,equals(Object obj),boolean
OptionalDouble,getAsDouble(),double
OptionalDouble,hashCode(),int
OptionalDouble,ifPresent(DoubleConsumer consumer),void
OptionalDouble,isPresent(),boolean
OptionalDouble,of(double value),static OptionalDouble
OptionalDouble,orElse(double other),double
OptionalDouble,orElseGet(DoubleSupplier other),double
OptionalDouble,orElseThrow(Supplier<X> exceptionSupplier),<X extends Throwable>double
OptionalDouble,toString(),String
OptionalInt,empty(),static OptionalInt
OptionalInt,equals(Object obj),boolean
OptionalInt,getAsInt(),int
OptionalInt,hashCode(),int
OptionalInt,ifPresent(IntConsumer consumer),void
OptionalInt,isPresent(),boolean
OptionalInt,of(int value),static OptionalInt
OptionalInt,orElse(int other),int
OptionalInt,orElseGet(IntSupplier other),int
OptionalInt,orElseThrow(Supplier<X> exceptionSupplier),<X extends Throwable>int
OptionalInt,toString(),String
OptionalLong,empty(),static OptionalLong
OptionalLong,equals(Object obj),boolean
OptionalLong,getAsLong(),long
OptionalLong,hashCode(),int
OptionalLong,ifPresent(LongConsumer consumer),void
OptionalLong,isPresent(),boolean
OptionalLong,of(long value),static OptionalLong
OptionalLong,orElse(long other),long
OptionalLong,orElseGet(LongSupplier other),long
OptionalLong,orElseThrow(Supplier<X> exceptionSupplier),<X extends Throwable>long
OptionalLong,toString(),String
PriorityQueue,add(E e),boolean
PriorityQueue,clear(),void
PriorityQueue,comparator(),Comparator<? super E>
PriorityQueue,contains(Object o),boolean
PriorityQueue,iterator(),Iterator<E>
PriorityQueue,offer(E e),boolean
PriorityQueue,peek(),E
PriorityQueue,poll(),E
PriorityQueue,remove(Object o),boolean
PriorityQueue,size(),int
PriorityQueue,spliterator(),Spliterator<E>
PriorityQueue,toArray(),Object[]
PriorityQueue,toArray(T[] a),<T> T[]
Properties,getProperty(String key),String
Properties,"getProperty(String key, String defaultValue)",String
Properties,list(PrintStream out),void
Properties,list(PrintWriter out),void
Properties,load(InputStream inStream),void
Properties,load(Reader reader),void
Properties,loadFromXML(InputStream in),void
Properties,propertyNames(),Enumeration<?>
Properties,"save(OutputStream out, String comments)",void
Properties,"setProperty(String key, String value)",Object
Properties,"store(OutputStream out, String comments)",void
Properties,"store(Writer writer, String comments)",void
Properties,"storeToXML(OutputStream os, String comment)",void
Properties,"storeToXML(OutputStream os, String comment, String encoding)",void
Properties,stringPropertyNames(),Set<String>
PropertyPermission,equals(Object obj),boolean
PropertyPermission,getActions(),String
PropertyPermission,hashCode(),int
PropertyPermission,implies(Permission p),boolean
PropertyPermission,newPermissionCollection(),PermissionCollection
PropertyResourceBundle,getKeys(),Enumeration<String>
PropertyResourceBundle,handleGetObject(String key),Object
PropertyResourceBundle,handleKeySet(),protected Set<String>
Random,doubles(),DoubleStream
Random,"doubles(double randomNumberOrigin, double randomNumberBound)",DoubleStream
Random,doubles(long streamSize),DoubleStream
Random,"doubles(long streamSize, double randomNumberOrigin, double randomNumberBound)",DoubleStream
Random,ints(),IntStream
Random,"ints(int randomNumberOrigin, int randomNumberBound)",IntStream
Random,ints(long streamSize),IntStream
Random,"ints(long streamSize, int randomNumberOrigin, int randomNumberBound)",IntStream
Random,longs(),LongStream
Random,longs(long streamSize),LongStream
Random,"longs(long randomNumberOrigin, long randomNumberBound)",LongStream
Random,"longs(long streamSize, long randomNumberOrigin, long randomNumberBound)",LongStream
Random,next(int bits),protected int
Random,nextBoolean(),boolean
Random,nextBytes(byte[] bytes),void
Random,nextDouble(),double
Random,nextFloat(),float
Random,nextGaussian(),double
Random,nextInt(),int
Random,nextInt(int bound),int
Random,nextLong(),long
Random,setSeed(long seed),void
ResourceBundle,clearCache(),static void
ResourceBundle,clearCache(ClassLoader loader),static void
ResourceBundle,containsKey(String key),boolean
ResourceBundle,getBaseBundleName(),String
ResourceBundle,getBundle(String baseName),static ResourceBundle
ResourceBundle,"getBundle(String baseName, Locale locale)",static ResourceBundle
ResourceBundle,"getBundle(String baseName, Locale locale, ClassLoader loader)",static ResourceBundle
ResourceBundle,"getBundle(String baseName, Locale targetLocale, ClassLoader loader, ResourceBundle.Control control)",static ResourceBundle
ResourceBundle,"getBundle(String baseName, Locale targetLocale, ResourceBundle.Control control)",static ResourceBundle
ResourceBundle,"getBundle(String baseName, ResourceBundle.Control control)",static ResourceBundle
ResourceBundle,getKeys(),abstract Enumeration<String>
ResourceBundle,getLocale(),Locale
ResourceBundle,getObject(String key),Object
ResourceBundle,getString(String key),String
ResourceBundle,getStringArray(String key),String[]
ResourceBundle,handleGetObject(String key),protected abstract Object
ResourceBundle,handleKeySet(),protected Set<String>
ResourceBundle,keySet(),Set<String>
ResourceBundle,setParent(ResourceBundle parent),protected void
ResourceBundle.Control,"getCandidateLocales(String baseName, Locale locale)",List<Locale>
ResourceBundle.Control,getControl(List<String> formats),static ResourceBundle.Control
ResourceBundle.Control,"getFallbackLocale(String baseName, Locale locale)",Locale
ResourceBundle.Control,getFormats(String baseName),List<String>
ResourceBundle.Control,getNoFallbackControl(List<String> formats),static ResourceBundle.Control
ResourceBundle.Control,"getTimeToLive(String baseName, Locale locale)",long
ResourceBundle.Control,"needsReload(String baseName, Locale locale, String format, ClassLoader loader, ResourceBundle bundle, long loadTime)",boolean
ResourceBundle.Control,"newBundle(String baseName, Locale locale, String format, ClassLoader loader, boolean reload)",ResourceBundle
ResourceBundle.Control,"toBundleName(String baseName, Locale locale)",String
ResourceBundle.Control,"toResourceName(String bundleName, String suffix)",String
Scanner,close(),void
Scanner,delimiter(),Pattern
Scanner,findInLine(Pattern pattern),String
Scanner,findInLine(String pattern),String
Scanner,"findWithinHorizon(Pattern pattern, int horizon)",String
Scanner,"findWithinHorizon(String pattern, int horizon)",String
Scanner,hasNext(),boolean
Scanner,hasNext(Pattern pattern),boolean
Scanner,hasNext(String pattern),boolean
Scanner,hasNextBigDecimal(),boolean
Scanner,hasNextBigInteger(),boolean
Scanner,hasNextBigInteger(int radix),boolean
Scanner,hasNextBoolean(),boolean
Scanner,hasNextByte(),boolean
Scanner,hasNextByte(int radix),boolean
Scanner,hasNextDouble(),boolean
Scanner,hasNextFloat(),boolean
Scanner,hasNextInt(),boolean
Scanner,hasNextInt(int radix),boolean
Scanner,hasNextLine(),boolean
Scanner,hasNextLong(),boolean
Scanner,hasNextLong(int radix),boolean
Scanner,hasNextShort(),boolean
Scanner,hasNextShort(int radix),boolean
Scanner,ioException(),IOException
Scanner,locale(),Locale
Scanner,match(),MatchResult
Scanner,next(),String
Scanner,next(Pattern pattern),String
Scanner,next(String pattern),String
Scanner,nextBigDecimal(),BigDecimal
Scanner,nextBigInteger(),BigInteger
Scanner,nextBigInteger(int radix),BigInteger
Scanner,nextBoolean(),boolean
Scanner,nextByte(),byte
Scanner,nextByte(int radix),byte
Scanner,nextDouble(),double
Scanner,nextFloat(),float
Scanner,nextInt(),int
Scanner,nextInt(int radix),int
Scanner,nextLine(),String
Scanner,nextLong(),long
Scanner,nextLong(int radix),long
Scanner,nextShort(),short
Scanner,nextShort(int radix),short
Scanner,radix(),int
Scanner,remove(),void
Scanner,reset(),Scanner
Scanner,skip(Pattern pattern),Scanner
Scanner,skip(String pattern),Scanner
Scanner,toString(),String
Scanner,useDelimiter(Pattern pattern),Scanner
Scanner,useDelimiter(String pattern),Scanner
Scanner,useLocale(Locale locale),Scanner
Scanner,useRadix(int radix),Scanner
ServiceLoader,iterator(),Iterator<S>
ServiceLoader,load(Class<S> service),static <S> ServiceLoader<S>
ServiceLoader,"load(Class<S> service, ClassLoader loader)",static <S> ServiceLoader<S>
ServiceLoader,loadInstalled(Class<S> service),static <S> ServiceLoader<S>
ServiceLoader,reload(),void
ServiceLoader,toString(),String
SimpleTimeZone,clone(),Object
SimpleTimeZone,equals(Object obj),boolean
SimpleTimeZone,getDSTSavings(),int
SimpleTimeZone,"getOffset(int era, int year, int month, int day, int dayOfWeek, int millis)",int
SimpleTimeZone,getOffset(long date),int
SimpleTimeZone,getRawOffset(),int
SimpleTimeZone,hashCode(),int
SimpleTimeZone,hasSameRules(TimeZone other),boolean
SimpleTimeZone,inDaylightTime(Date date),boolean
SimpleTimeZone,observesDaylightTime(),boolean
SimpleTimeZone,setDSTSavings(int millisSavedDuringDST),void
SimpleTimeZone,"setEndRule(int endMonth, int endDay, int endTime)",void
SimpleTimeZone,"setEndRule(int endMonth, int endDay, int endDayOfWeek, int endTime)",void
SimpleTimeZone,"setEndRule(int endMonth, int endDay, int endDayOfWeek, int endTime, boolean after)",void
SimpleTimeZone,setRawOffset(int offsetMillis),void
SimpleTimeZone,"setStartRule(int startMonth, int startDay, int startTime)",void
SimpleTimeZone,"setStartRule(int startMonth, int startDay, int startDayOfWeek, int startTime)",void
SimpleTimeZone,"setStartRule(int startMonth, int startDay, int startDayOfWeek, int startTime, boolean after)",void
SimpleTimeZone,setStartYear(int year),void
SimpleTimeZone,toString(),String
SimpleTimeZone,useDaylightTime(),boolean
Spliterators,emptyDoubleSpliterator(),static Spliterator.OfDouble
Spliterators,emptyIntSpliterator(),static Spliterator.OfInt
Spliterators,emptyLongSpliterator(),static Spliterator.OfLong
Spliterators,emptySpliterator(),static <T> Spliterator<T>
Spliterators,iterator(Spliterator.OfDouble spliterator),static PrimitiveIterator.OfDouble
Spliterators,iterator(Spliterator.OfInt spliterator),static PrimitiveIterator.OfInt
Spliterators,iterator(Spliterator.OfLong spliterator),static PrimitiveIterator.OfLong
Spliterators,iterator(Spliterator<? extends T> spliterator),static <T> Iterator<T>
Spliterators,"spliterator(Collection<? extends T> c, int characteristics)",static <T> Spliterator<T>
Spliterators,"spliterator(double[] array, int additionalCharacteristics)",static Spliterator.OfDouble
Spliterators,"spliterator(double[] array, int fromIndex, int toIndex, int additionalCharacteristics)",static Spliterator.OfDouble
Spliterators,"spliterator(int[] array, int additionalCharacteristics)",static Spliterator.OfInt
Spliterators,"spliterator(int[] array, int fromIndex, int toIndex, int additionalCharacteristics)",static Spliterator.OfInt
Spliterators,"spliterator(Iterator<? extends T> iterator, long size, int characteristics)",static <T> Spliterator<T>
Spliterators,"spliterator(long[] array, int additionalCharacteristics)",static Spliterator.OfLong
Spliterators,"spliterator(long[] array, int fromIndex, int toIndex, int additionalCharacteristics)",static Spliterator.OfLong
Spliterators,"spliterator(Object[] array, int additionalCharacteristics)",static <T> Spliterator<T>
Spliterators,"spliterator(Object[] array, int fromIndex, int toIndex, int additionalCharacteristics)",static <T> Spliterator<T>
Spliterators,"spliterator(PrimitiveIterator.OfDouble iterator, long size, int characteristics)",static Spliterator.OfDouble
Spliterators,"spliterator(PrimitiveIterator.OfInt iterator, long size, int characteristics)",static Spliterator.OfInt
Spliterators,"spliterator(PrimitiveIterator.OfLong iterator, long size, int characteristics)",static Spliterator.OfLong
Spliterators,"spliteratorUnknownSize(Iterator<? extends T> iterator, int characteristics)",static <T> Spliterator<T>
Spliterators,"spliteratorUnknownSize(PrimitiveIterator.OfDouble iterator, int characteristics)",static Spliterator.OfDouble
Spliterators,"spliteratorUnknownSize(PrimitiveIterator.OfInt iterator, int characteristics)",static Spliterator.OfInt
Spliterators,"spliteratorUnknownSize(PrimitiveIterator.OfLong iterator, int characteristics)",static Spliterator.OfLong
Spliterators.AbstractDoubleSpliterator,characteristics(),int
Spliterators.AbstractDoubleSpliterator,estimateSize(),long
Spliterators.AbstractDoubleSpliterator,trySplit(),Spliterator.OfDouble
Spliterators.AbstractIntSpliterator,characteristics(),int
Spliterators.AbstractIntSpliterator,estimateSize(),long
Spliterators.AbstractIntSpliterator,trySplit(),Spliterator.OfInt
Spliterators.AbstractLongSpliterator,characteristics(),int
Spliterators.AbstractLongSpliterator,estimateSize(),long
Spliterators.AbstractLongSpliterator,trySplit(),Spliterator.OfLong
Spliterators.AbstractSpliterator,characteristics(),int
Spliterators.AbstractSpliterator,estimateSize(),long
Spliterators.AbstractSpliterator,trySplit(),Spliterator<T>
SplittableRandom,doubles(),DoubleStream
SplittableRandom,"doubles(double randomNumberOrigin, double randomNumberBound)",DoubleStream
SplittableRandom,doubles(long streamSize),DoubleStream
SplittableRandom,"doubles(long streamSize, double randomNumberOrigin, double randomNumberBound)",DoubleStream
SplittableRandom,ints(),IntStream
SplittableRandom,"ints(int randomNumberOrigin, int randomNumberBound)",IntStream
SplittableRandom,ints(long streamSize),IntStream
SplittableRandom,"ints(long streamSize, int randomNumberOrigin, int randomNumberBound)",IntStream
SplittableRandom,longs(),LongStream
SplittableRandom,longs(long streamSize),LongStream
SplittableRandom,"longs(long randomNumberOrigin, long randomNumberBound)",LongStream
SplittableRandom,"longs(long streamSize, long randomNumberOrigin, long randomNumberBound)",LongStream
SplittableRandom,nextBoolean(),boolean
SplittableRandom,nextDouble(),double
SplittableRandom,nextDouble(double bound),double
SplittableRandom,"nextDouble(double origin, double bound)",double
SplittableRandom,nextInt(),int
SplittableRandom,nextInt(int bound),int
SplittableRandom,"nextInt(int origin, int bound)",int
SplittableRandom,nextLong(),long
SplittableRandom,nextLong(long bound),long
SplittableRandom,"nextLong(long origin, long bound)",long
SplittableRandom,split(),SplittableRandom
Stack,empty(),boolean
Stack,peek(),E
Stack,pop(),E
Stack,push(E item),E
Stack,search(Object o),int
StringJoiner,add(CharSequence newElement),StringJoiner
StringJoiner,length(),int
StringJoiner,merge(StringJoiner other),StringJoiner
StringJoiner,setEmptyValue(CharSequence emptyValue),StringJoiner
StringJoiner,toString(),String
StringTokenizer,countTokens(),int
StringTokenizer,hasMoreElements(),boolean
StringTokenizer,hasMoreTokens(),boolean
StringTokenizer,nextElement(),Object
StringTokenizer,nextToken(),String
StringTokenizer,nextToken(String delim),String
Timer,cancel(),void
Timer,purge(),int
Timer,"schedule(TimerTask task, Date time)",void
Timer,"schedule(TimerTask task, Date firstTime, long period)",void
Timer,"schedule(TimerTask task, long delay)",void
Timer,"schedule(TimerTask task, long delay, long period)",void
Timer,"scheduleAtFixedRate(TimerTask task, Date firstTime, long period)",void
Timer,"scheduleAtFixedRate(TimerTask task, long delay, long period)",void
TimerTask,cancel(),boolean
TimerTask,run(),abstract void
TimerTask,scheduledExecutionTime(),long
TimeZone,clone(),Object
TimeZone,getAvailableIDs(),static String[]
TimeZone,getAvailableIDs(int rawOffset),static String[]
TimeZone,getDefault(),static TimeZone
TimeZone,getDisplayName(),String
TimeZone,"getDisplayName(boolean daylight, int style)",String
TimeZone,"getDisplayName(boolean daylight, int style, Locale locale)",String
TimeZone,getDisplayName(Locale locale),String
TimeZone,getDSTSavings(),int
TimeZone,getID(),String
TimeZone,"getOffset(int era, int year, int month, int day, int dayOfWeek, int milliseconds)",abstract int
TimeZone,getOffset(long date),int
TimeZone,getRawOffset(),abstract int
TimeZone,getTimeZone(String ID),static TimeZone
TimeZone,getTimeZone(ZoneId zoneId),static TimeZone
TimeZone,hasSameRules(TimeZone other),boolean
TimeZone,inDaylightTime(Date date),abstract boolean
TimeZone,observesDaylightTime(),boolean
TimeZone,setDefault(TimeZone zone),static void
TimeZone,setID(String ID),void
TimeZone,setRawOffset(int offsetMillis),abstract void
TimeZone,toZoneId(),ZoneId
TimeZone,useDaylightTime(),abstract boolean
TreeMap,ceilingEntry(K key),"Map.Entry<K,V>"
TreeMap,ceilingKey(K key),K
TreeMap,clear(),void
TreeMap,clone(),Object
TreeMap,comparator(),Comparator<? super K>
TreeMap,containsKey(Object key),boolean
TreeMap,containsValue(Object value),boolean
TreeMap,descendingKeySet(),NavigableSet<K>
TreeMap,descendingMap(),"NavigableMap<K,V>"
TreeMap,entrySet(),"Set<Map.Entry<K,V>>"
TreeMap,firstEntry(),"Map.Entry<K,V>"
TreeMap,firstKey(),K
TreeMap,floorEntry(K key),"Map.Entry<K,V>"
TreeMap,floorKey(K key),K
TreeMap,"forEach(BiConsumer<? super K,? super V> action)",void
TreeMap,get(Object key),V
TreeMap,headMap(K toKey),"SortedMap<K,V>"
TreeMap,"headMap(K toKey, boolean inclusive)","NavigableMap<K,V>"
TreeMap,higherEntry(K key),"Map.Entry<K,V>"
TreeMap,higherKey(K key),K
TreeMap,keySet(),Set<K>
TreeMap,lastEntry(),"Map.Entry<K,V>"
TreeMap,lastKey(),K
TreeMap,lowerEntry(K key),"Map.Entry<K,V>"
TreeMap,lowerKey(K key),K
TreeMap,navigableKeySet(),NavigableSet<K>
TreeMap,pollFirstEntry(),"Map.Entry<K,V>"
TreeMap,pollLastEntry(),"Map.Entry<K,V>"
TreeMap,"put(K key, V value)",V
TreeMap,"putAll(Map<? extends K,? extends V> map)",void
TreeMap,remove(Object key),V
TreeMap,"replace(K key, V value)",V
TreeMap,"replace(K key, V oldValue, V newValue)",boolean
TreeMap,"replaceAll(BiFunction<? super K,? super V,? extends V> function)",void
TreeMap,size(),int
TreeMap,"subMap(K fromKey, boolean fromInclusive, K toKey, boolean toInclusive)","NavigableMap<K,V>"
TreeMap,"subMap(K fromKey, K toKey)","SortedMap<K,V>"
TreeMap,tailMap(K fromKey),"SortedMap<K,V>"
TreeMap,"tailMap(K fromKey, boolean inclusive)","NavigableMap<K,V>"
TreeMap,values(),Collection<V>
TreeSet,add(E e),boolean
TreeSet,addAll(Collection<? extends E> c),boolean
TreeSet,ceiling(E e),E
TreeSet,clear(),void
TreeSet,clone(),Object
TreeSet,comparator(),Comparator<? super E>
TreeSet,contains(Object o),boolean
TreeSet,descendingIterator(),Iterator<E>
TreeSet,descendingSet(),NavigableSet<E>
TreeSet,first(),E
TreeSet,floor(E e),E
TreeSet,headSet(E toElement),SortedSet<E>
TreeSet,"headSet(E toElement, boolean inclusive)",NavigableSet<E>
TreeSet,higher(E e),E
TreeSet,isEmpty(),boolean
TreeSet,iterator(),Iterator<E>
TreeSet,last(),E
TreeSet,lower(E e),E
TreeSet,pollFirst(),E
TreeSet,pollLast(),E
TreeSet,remove(Object o),boolean
TreeSet,size(),int
TreeSet,spliterator(),Spliterator<E>
TreeSet,"subSet(E fromElement, boolean fromInclusive, E toElement, boolean toInclusive)",NavigableSet<E>
TreeSet,"subSet(E fromElement, E toElement)",SortedSet<E>
TreeSet,tailSet(E fromElement),SortedSet<E>
TreeSet,"tailSet(E fromElement, boolean inclusive)",NavigableSet<E>
UUID,clockSequence(),int
UUID,compareTo(UUID val),int
UUID,equals(Object obj),boolean
UUID,fromString(String name),static UUID
UUID,getLeastSignificantBits(),long
UUID,getMostSignificantBits(),long
UUID,hashCode(),int
UUID,nameUUIDFromBytes(byte[] name),static UUID
UUID,node(),long
UUID,randomUUID(),static UUID
UUID,timestamp(),long
UUID,toString(),String
UUID,variant(),int
UUID,version(),int
Vector,add(E e),boolean
Vector,"add(int index, E element)",void
Vector,addAll(Collection<? extends E> c),boolean
Vector,"addAll(int index, Collection<? extends E> c)",boolean
Vector,addElement(E obj),void
Vector,capacity(),int
Vector,clear(),void
Vector,clone(),Object
Vector,contains(Object o),boolean
Vector,containsAll(Collection<?> c),boolean
Vector,copyInto(Object[] anArray),void
Vector,elementAt(int index),E
Vector,elements(),Enumeration<E>
Vector,ensureCapacity(int minCapacity),void
Vector,equals(Object o),boolean
Vector,firstElement(),E
Vector,forEach(Consumer<? super E> action),void
Vector,get(int index),E
Vector,hashCode(),int
Vector,indexOf(Object o),int
Vector,"indexOf(Object o, int index)",int
Vector,"insertElementAt(E obj, int index)",void
Vector,isEmpty(),boolean
Vector,iterator(),Iterator<E>
Vector,lastElement(),E
Vector,lastIndexOf(Object o),int
Vector,"lastIndexOf(Object o, int index)",int
Vector,listIterator(),ListIterator<E>
Vector,listIterator(int index),ListIterator<E>
Vector,remove(int index),E
Vector,remove(Object o),boolean
Vector,removeAll(Collection<?> c),boolean
Vector,removeAllElements(),void
Vector,removeElement(Object obj),boolean
Vector,removeElementAt(int index),void
Vector,removeIf(Predicate<? super E> filter),boolean
Vector,"removeRange(int fromIndex, int toIndex)",protected void
Vector,replaceAll(UnaryOperator<E> operator),void
Vector,retainAll(Collection<?> c),boolean
Vector,"set(int index, E element)",E
Vector,"setElementAt(E obj, int index)",void
Vector,setSize(int newSize),void
Vector,size(),int
Vector,sort(Comparator<? super E> c),void
Vector,spliterator(),Spliterator<E>
Vector,"subList(int fromIndex, int toIndex)",List<E>
Vector,toArray(),Object[]
Vector,toArray(T[] a),<T> T[]
Vector,toString(),String
Vector,trimToSize(),void
WeakHashMap,clear(),void
WeakHashMap,containsKey(Object key),boolean
WeakHashMap,containsValue(Object value),boolean
WeakHashMap,entrySet(),"Set<Map.Entry<K,V>>"
WeakHashMap,"forEach(BiConsumer<? super K,? super V> action)",void
WeakHashMap,get(Object key),V
WeakHashMap,isEmpty(),boolean
WeakHashMap,keySet(),Set<K>
WeakHashMap,"put(K key, V value)",V
WeakHashMap,"putAll(Map<? extends K,? extends V> m)",void
WeakHashMap,remove(Object key),V
WeakHashMap,"replaceAll(BiFunction<? super K,? super V,? extends V> function)",void
WeakHashMap,size(),int
WeakHashMap,values(),Collection<V>
