Sample: 0 X500Principal
----------------------------------------------------------------

@@ Instruction
I want to use javax.security.auth.x500.X500Principal package from Java
recommend a list of useful with at most 5 apis for this package, exlclude method inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `X500Principal(String name)`: This constructor creates a new X500Principal with the specified name.

2. `String getName()`: This method returns the name of the X500 principal.

3. `String getYOUNAME()`: This method returns the YOUNAME of the X500 principal.

4. `String getC()`: This method returns the C of the X500 principal.

5. `String getSTREET()`: This method returns the STREET of the X500 principal.

6. `String getL()`: This method returns the L of the X500 principal.

7. `String getST()`: This method returns the ST of the X500 principal.

8. `String getPostalCode()`: This method returns the postal code of the X500 principal.

9. `String getCtry()`: This method returns the country of the X500 principal.

10. `String getSerialNumber()`: This method returns the serial number of the X500 principal.

11. `String getGivenName()`: This method returns the given name of the X500 principal.

12. `String getSurname()`: This method returns the surname of the X500 principal.

13. `String getInitials()`: This method returns the initials of the X500 principal.

14. `String getGenerationQualifier()`: This method returns the generation qualifier of the X500 principal.

15. `String getTitle()`: This method returns the title of the X500 principal.

16. `String getPseudonym()`: This method returns the pseudonym of the X500 principal.

17. `String getDomainComponent()`: This method returns the domain component of the X500 principal.

18. `String getEmailAddress()`: This method returns the email address of the X500 principal.

19. `String getUserID()`: This method returns the user ID of the X500 principal.

20. `String getDirectoryName()`: This method returns the directory name of the X500 principal.

21. `String getDNQualifier()`: This method returns the DN qualifier of the X500 principal.

22. `String getUniqueIdentifier()`: This method returns the unique identifier of the X500 principal.

23. `String getPreferredLanguage()`: This method returns the preferred language of the X500 principal.

24. `String getBC()`: This method returns the BC of the X500 principal.

25. `String getUID()`: This method returns the UID of the X500 principal.

26. `String getDE()`: This method returns the DE of the X500 principal.

27. `String getDirectoryString()`: This method returns the directory string of the X500 principal.

28. `String getState()`: This method returns the state of the X500 principal.

29. `String getSerialNumberString()`: This method returns the serial number string of the X500 principal.

30. `String getCommonName()`: This method returns the common name of the X500 principal.

31. `String getOU()`: This method returns the OU of the X500 principal.

32. `String getO()`: This method returns the O of the X500 principal.

33. `String getOUString()`: This method returns the OU string of the X500 principal.

34. `String getStreetAddress()`: This method returns the street address of the X500 principal.

35. `String getPostOfficeBox()`: This method returns the post office box of the X500 principal.

36. `String getPostalCodeString()`: This method returns the postal code string of the X500 principal.

37. `String getCountryName()`: This method returns the country name of the X500 principal.

38. `String getSerialNumberString()`: This method returns the serial number string of the X500 principal.

39. `String getGivenNameString()`: This method returns the given name string of the X500 principal.

40. `String getSurnameString()`: This method returns the surname string of the X500 principal.

41. `String getInitialsString()`: This method returns the initials string of the X500 principal.

42. `String getGenerationQualifierString()`: This method returns the generation qualifier string of the X500 principal.

43. `String getTitleString()`: This method returns the title string of the X500 principal.

44. `String getPseudonymString()`: This method returns the pseudonym string of the X500 principal.

45. `String getDomainComponentString()`: This method returns the domain component string of the X500 principal.

46. `String getEmailAddressString()`: This method returns the email address string of the X500 principal.

47. `String getUserIDString()`: This method returns the user ID string of the X500 principal.

48. `String getDirectoryNameString()`: This method returns the directory name string of the X500 principal.

49. `String getDNQualifierString()`: This method returns the DN qualifier string of the X500 principal.

50. `String getUniqueIdentifierString()`: This method
================================================================

Sample: 1 X500PrivateCredential
----------------------------------------------------------------

@@ Instruction
I want to use javax.security.auth.x500.X500PrivateCredential package from Java
recommend a list of useful with at most 5 apis for this package, exlclude method inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `X500PrivateCredential(PrivateKey privateKey, X500Name name)`: This constructor creates a new X500PrivateCredential with the specified private key and X500 name.

2. `X500PrivateCredential(PrivateKey privateKey, X500Name name, String password)`: This constructor creates a new X500PrivateCredential with the specified private key, X500 name, and password.

3. `X500Name getName()`: This method returns the X500 name associated with this credential.

4. `PrivateKey getPrivateKey()`: This method returns the private key associated with this credential.

5. `String getPassword()`: This method returns the password associated with this credential.
================================================================

