Sample: 0 AttachmentMarshaller
----------------------------------------------------------------

@@ Instruction
I want to use javax.xml.bind.attachment.AttachmentMarshaller package from Java
recommend a list of useful with at most 5 apis for this package, exlclude method inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean add(E e)`: This method appends the specified element to the end of this list.
2. `void add(int index, E element)`: This method inserts the specified element at the specified position in this list.
3. `boolean addAll(Collection<? extends E> c)`: This method appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator.
4. `boolean addAll(int index, Collection<? extends E> c)`: This method inserts all of the elements in the specified collection into this list, starting at the specified position.
5. `void clear()`: This method removes all of the elements from this list.
================================================================

Sample: 1 AttachmentUnmarshaller
----------------------------------------------------------------

@@ Instruction
I want to use javax.xml.bind.attachment.AttachmentUnmarshaller package from Java
recommend a list of useful with at most 5 apis for this package, exlclude method inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `AttachmentUnmarshaller.getAttachment(String id)`: This method returns the attachment with the specified id.

2. `AttachmentUnmarshaller.getAttachments()`: This method returns a map of all attachments.

3. `AttachmentUnmarshaller.removeAttachment(String id)`: This method removes the attachment with the specified id.

4. `AttachmentUnmarshaller.setAttachment(String id, Object value)`: This method sets the attachment with the specified id to the specified value.

5. `AttachmentUnmarshaller.setAttachments(Map<String, Object> attachments)`: This method sets the attachments to the specified map.
================================================================

