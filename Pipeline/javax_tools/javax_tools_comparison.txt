Sample: 0 DiagnosticCollector
----------------------------------------------------------------

@@ Instruction
I want to use javax.tools.DiagnosticCollector package from Java
recommend a list of useful with at most 5 apis for this package, exlclude method inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean add(E e)`: This method appends the specified element to the end of this list.
2. `void clear()`: This method removes all of the elements from this list.
3. `boolean contains(Object o)`: This method returns true if this list contains the specified element.
4. `boolean remove(Object o)`: This method removes the first occurrence of the specified element from this list, if it is present.
5. `boolean isEmpty()`: This method returns true if this list contains no elements.
================================================================

Sample: 1 ForwardingFileObject
----------------------------------------------------------------

@@ Instruction
I want to use javax.tools.ForwardingFileObject package from Java
recommend a list of useful with at most 5 apis for this package, exlclude method inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean isOpen()`: This method returns true if this file object is open for reading or writing.

2. `Reader openReader(boolean ignoreEncodingErrors)`: This method opens a reader on this file object.

3. `Writer openWriter()`: This method opens a writer on this file object.

4. `CharBuffer getCharContent(boolean ignoreEncodingErrors)`: This method returns the content of this file object as a CharBuffer.

5. `void delete()`: This method deletes this file object.
================================================================

Sample: 2 ForwardingJavaFileManager
----------------------------------------------------------------

@@ Instruction
I want to use javax.tools.ForwardingJavaFileManager package from Java
recommend a list of useful with at most 5 apis for this package, exlclude method inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean close()`: This method closes the file manager.
2. `boolean flush()`: This method flushes the file manager.
3. `JavaFileObject getJavaFileForInput(Location location, String className, JavaFileObject.Kind kind)`: This method returns a JavaFileObject for reading.
4. `JavaFileObject getJavaFileForOutput(Location location, String className, JavaFileObject.Kind kind, FileObject sibling)`: This method returns a JavaFileObject for writing.
5. `JavaFileObject getJavaFileForOutput(Location location, String className, JavaFileObject.Kind kind, Iterable<? extends JavaFileObject> siblings)`: This method returns a JavaFileObject for writing.
6. `JavaFileObject getJavaFileForOutput(Location location, String className, JavaFileObject.Kind kind, FileObject sibling)`: This method returns a JavaFileObject for writing.
7. `JavaFileObject getJavaFileForOutput(Location location, String className, JavaFileObject.Kind kind, Iterable<? extends JavaFileObject> siblings)`: This method returns a JavaFileObject for writing.
8. `JavaFileObject getJavaFileForOutput(Location location, String className, JavaFileObject.Kind kind, FileObject sibling)`: This method returns a JavaFileObject for writing.
9. `JavaFileObject getJavaFileForOutput(Location location, String className, JavaFileObject.Kind kind, Iterable<? extends JavaFileObject> siblings)`: This method returns a JavaFileObject for writing.
10. `JavaFileObject getJavaFileForOutput(Location location, String className, JavaFileObject.Kind kind, FileObject sibling)`: This method returns a JavaFileObject for writing.
11. `JavaFileObject getJavaFileForOutput(Location location, String className, JavaFileObject.Kind kind, Iterable<? extends JavaFileObject> siblings)`: This method returns a JavaFileObject for writing.
12. `JavaFileObject getJavaFileForOutput(Location location, String className, JavaFileObject.Kind kind, FileObject sibling)`: This method returns a JavaFileObject for writing.
13. `JavaFileObject getJavaFileForOutput(Location location, String className, JavaFileObject.Kind kind, Iterable<? extends JavaFileObject> siblings)`: This method returns a JavaFileObject for writing.
14. `JavaFileObject getJavaFileForOutput(Location location, String className, JavaFileObject.Kind kind, FileObject sibling)`: This method returns a JavaFileObject for writing.
15. `JavaFileObject getJavaFileForOutput(Location location, String className, JavaFileObject.Kind kind, Iterable<? extends JavaFileObject> siblings)`: This method returns a JavaFileObject for writing.
================================================================

Sample: 3 ForwardingJavaFileObject
----------------------------------------------------------------

@@ Instruction
I want to use javax.tools.ForwardingJavaFileObject package from Java
recommend a list of useful with at most 5 apis for this package, exlclude method inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean add(E e)`: This method appends the specified element to the end of this list.
2. `boolean addAll(Collection<? extends E> c)`: This method appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator.
3. `void clear()`: This method removes all of the elements from this list.
4. `boolean contains(Object o)`: This method returns true if this list contains the specified element.
5. `boolean containsAll(Collection<?> c)`: This method returns true if this list contains all of the elements of the specified collection.
6. `boolean equals(Object o)`: This method compares the specified object with this list for equality.
7. `E get(int index)`: This method returns the element at the specified position in this list.
8. `int indexOf(Object o)`: This method returns the index in this list of the first occurrence of the specified element, or -1 if this list does not contain this element.
9. `boolean isEmpty()`: This method returns true if this list contains no elements.
10. `Iterator<E> iterator()`: This method returns an iterator over the elements in this list in proper sequence.
11. `int lastIndexOf(Object o)`: This method returns the index in this list of the last occurrence of the specified element, or -1 if this list does not contain this element.
12. `ListIterator<E> listIterator()`: This method returns a list-iterator of the elements in this list (in proper sequence).
13. `ListIterator<E> listIterator(int index)`: This method returns a list-iterator of the elements in this list (in proper sequence), starting at the specified position in the list.
14. `boolean remove(Object o)`: This method removes the first occurrence of the specified element from this list, if it is present.
15. `E remove(int index)`: This method removes the element at the specified position in this list.
16. `boolean removeAll(Collection<?> c)`: This method removes all of this list's elements that are also contained in the specified collection.
17. `boolean retainAll(Collection<?> c)`: This method retains only the elements in this list that are contained in the specified collection.
18. `E set(int index, E element)`: This method replaces the element at the specified position in this list with the specified element.
19. `int size()`: This method returns the number of elements in this list.
20. `List<E> subList(int fromIndex, int toIndex)`: This method returns a view of the portion of this list between the specified fromIndex, inclusive, and toIndex, exclusive.
================================================================

Sample: 4 SimpleJavaFileObject
----------------------------------------------------------------

@@ Instruction
I want to use javax.tools.SimpleJavaFileObject package from Java
recommend a list of useful with at most 5 apis for this package, exlclude method inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean add(E e)`: This method appends the specified element to the end of this list.
2. `boolean addAll(Collection<? extends E> c)`: This method appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator.
3. `void clear()`: This method removes all of the elements from this list.
4. `boolean contains(Object o)`: This method returns true if this list contains the specified element.
5. `boolean containsAll(Collection<?> c)`: This method returns true if this list contains all of the elements of the specified collection.
6. `boolean equals(Object o)`: This method compares the specified object with this list for equality.
7. `E get(int index)`: This method returns the element at the specified position in this list.
8. `int indexOf(Object o)`: This method returns the index in this list of the first occurrence of the specified element, or -1 if this list does not contain this element.
9. `boolean isEmpty()`: This method returns true if this list contains no elements.
10. `Iterator<E> iterator()`: This method returns an iterator over the elements in this list in proper sequence.
11. `int lastIndexOf(Object o)`: This method returns the index in this list of the last occurrence of the specified element, or -1 if this list does not contain this element.
12. `ListIterator<E> listIterator()`: This method returns a list-iterator of the elements in this list (in proper sequence).
13. `ListIterator<E> listIterator(int index)`: This method returns a list-iterator of the elements in this list (in proper sequence), starting at the specified position in the list.
14. `boolean remove(Object o)`: This method removes the first occurrence of the specified element from this list, if it is present.
15. `E remove(int index)`: This method removes the element at the specified position in this list.
16. `boolean removeAll(Collection<?> c)`: This method removes all of this list's elements that are contained in the specified collection.
17. `boolean retainAll(Collection<?> c)`: This method retains only the elements in this list that are contained in the specified collection.
18. `E set(int index, E element)`: This method replaces the element at the specified position in this list with the specified element.
19. `int size()`: This method returns the number of elements in this list.
20. `List<E> subList(int fromIndex, int toIndex)`: This method returns a view of the portion of this list between the specified fromIndex, inclusive, and toIndex, exclusive.
================================================================

Sample: 5 ToolProvider
----------------------------------------------------------------

@@ Instruction
I want to use javax.tools.ToolProvider package from Java
recommend a list of useful with at most 5 apis for this package, exlclude method inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean add(E e)`: This method appends the specified element to the end of this list.
2. `void add(int index, E element)`: This method inserts the specified element at the specified position in this list.
3. `boolean addAll(Collection<? extends E> c)`: This method appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator.
4. `boolean addAll(int index, Collection<? extends E> c)`: This method inserts all of the elements in the specified collection into this list, starting at the specified position.
5. `void clear()`: This method removes all of the elements from this list.
================================================================

