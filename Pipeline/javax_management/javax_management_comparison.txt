Sample: 0 Attribute
----------------------------------------------------------------

@@ Instruction
I want to use javax.management.Attribute package from Java
recommend a list of useful with at most 5 apis for this package, exlclude method inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean add(E e)`: This method appends the specified element to the end of this list.
2. `void add(int index, E element)`: This method inserts the specified element at the specified position in this list.
3. `boolean addAll(Collection<? extends E> c)`: This method appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator.
4. `boolean addAll(int index, Collection<? extends E> c)`: This method inserts all of the elements in the specified collection into this list, starting at the specified position.
5. `void clear()`: This method removes all of the elements from this list.
================================================================

Sample: 1 AttributeChangeNotification
----------------------------------------------------------------

@@ Instruction
I want to use javax.management.AttributeChangeNotification package from Java
recommend a list of useful with at most 5 apis for this package, exlclude method inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `getAttributeName()`: This method returns the name of the attribute that changed.

2. `getSerializableValue()`: This method returns the new value of the attribute.

3. `getOldSerializableValue()`: This method returns the old value of the attribute.

4. `getType()`: This method returns the type of the attribute that changed.

5. `getSource()`: This method returns the source of the attribute that changed.
================================================================

Sample: 2 AttributeChangeNotificationFilter
----------------------------------------------------------------

@@ Instruction
I want to use javax.management.AttributeChangeNotificationFilter package from Java
recommend a list of useful with at most 5 apis for this package, exlclude method inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean isNotificationEnabled(Notification n)`: This method returns true if the specified notification is enabled for this filter.

2. `void enableNotification(Notification n)`: This method enables the specified notification for this filter.

3. `void disableNotification(Notification n)`: This method disables the specified notification for this filter.

4. `void enableAllNotifications()`: This method enables all notifications for this filter.

5. `void disableAllNotifications()`: This method disables all notifications for this filter.

6. `boolean isNotificationEnabled(Notification n)`: This method returns true if the specified notification is enabled for this filter.

7. `void enableNotification(Notification n)`: This method enables the specified notification for this filter.

8. `void disableNotification(Notification n)`: This method disables the specified notification for this filter.

9. `void enableAllNotifications()`: This method enables all notifications for this filter.

10. `void disableAllNotifications()`: This method disables all notifications for this filter.
================================================================

Sample: 3 AttributeList
----------------------------------------------------------------

@@ Instruction
I want to use javax.management.AttributeList package from Java
recommend a list of useful with at most 5 apis for this package, exlclude method inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean add(E e)`: This method appends the specified element to the end of this list.
2. `void add(int index, E element)`: This method inserts the specified element at the specified position in this list.
3. `boolean addAll(Collection<? extends E> c)`: This method appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator.
4. `boolean remove(Object o)`: This method removes the first occurrence of the specified element from this list, if it is present.
5. `E remove(int index)`: This method removes the element at the specified position in this list.
================================================================

Sample: 4 AttributeValueExp
----------------------------------------------------------------

@@ Instruction
I want to use javax.management.AttributeValueExp package from Java
recommend a list of useful with at most 5 apis for this package, exlclude method inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean contains(Object o)`: This method returns true if this list contains the specified element.

2. `boolean remove(Object o)`: This method removes the first occurrence of the specified element from this list, if it is present.

3. `boolean addAll(Collection<? extends E> c)`: This method appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator.

4. `boolean removeAll(Collection<?> c)`: This method removes all of this list's elements that are also contained in the specified collection.

5. `boolean retainAll(Collection<?> c)`: This method retains only the elements in this list that are contained in the specified collection.
================================================================

Sample: 5 DefaultLoaderRepository
----------------------------------------------------------------

@@ Instruction
I want to use javax.management.DefaultLoaderRepository package from Java
recommend a list of useful with at most 5 apis for this package, exlclude method inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean add(E e)`: This method appends the specified element to the end of this list.
2. `boolean addAll(Collection<? extends E> c)`: This method appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator.
3. `void clear()`: This method removes all of the elements from this list.
4. `boolean contains(Object o)`: This method returns true if this list contains the specified element.
5. `boolean containsAll(Collection<?> c)`: This method returns true if this list contains all of the elements of the specified collection.
================================================================

Sample: 6 ImmutableDescriptor
----------------------------------------------------------------

@@ Instruction
I want to use javax.management.ImmutableDescriptor package from Java
recommend a list of useful with at most 5 apis for this package, exlclude method inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean contains(Object o)`: This method returns true if this list contains the specified element.

2. `boolean isEmpty()`: This method returns true if this list contains no elements.

3. `int size()`: This method returns the number of elements in this list.

4. `Object[] toArray()`: This method returns an array containing all of the elements in this list in proper sequence (from first to last element).

5. `<T> T[] toArray(T[] a)`: This method returns an array containing all of the elements in this list in proper sequence (from first to last element); the runtime type of the returned array is that of the specified array.
================================================================

Sample: 7 JMX
----------------------------------------------------------------

@@ Instruction
I want to use javax.management.JMX package from Java
recommend a list of useful with at most 5 apis for this package, exlclude method inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `MBeanServerConnection connect(String, String)`: This method connects to a JMX MBean server.

2. `ObjectName registerMBean(ObjectName, MBean)`: This method registers an MBean with the MBean server.

3. `ObjectName registerMBean(ObjectName, MBean, NotificationBroadcaster)`: This method registers an MBean with the MBean server and a NotificationBroadcaster.

4. `ObjectName registerMBean(ObjectName, MBean, NotificationBroadcaster, ObjectName)`: This method registers an MBean with the MBean server, a NotificationBroadcaster, and a parent MBean.

5. `ObjectName registerMBean(ObjectName, MBean, ObjectName)`: This method registers an MBean with the MBean server and a parent MBean.
================================================================

Sample: 8 MBeanAttributeInfo
----------------------------------------------------------------

@@ Instruction
I want to use javax.management.MBeanAttributeInfo package from Java
recommend a list of useful with at most 5 apis for this package, exlclude method inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean isReadable()`: This method returns true if the attribute is readable.

2. `boolean isWritable()`: This method returns true if the attribute is writable.

3. `boolean isIs()`: This method returns true if the attribute is an identifier for the object.

4. `String getDescription()`: This method returns a description of the attribute.

5. `String getType()`: This method returns the type of the attribute.

6. `String getName()`: This method returns the name of the attribute.

7. `String getDescription()`: This method returns a description of the attribute.

8. `String getType()`: This method returns the type of the attribute.

9. `String getName()`: This method returns the name of the attribute.

10. `String getDescription()`: This method returns a description of the attribute.

11. `String getType()`: This method returns the type of the attribute.

12. `String getName()`: This method returns the name of the attribute.

13. `String getDescription()`: This method returns a description of the attribute.

14. `String getType()`: This method returns the type of the attribute.

15. `String getName()`: This method returns the name of the attribute.
================================================================

Sample: 9 MBeanConstructorInfo
----------------------------------------------------------------

@@ Instruction
I want to use javax.management.MBeanConstructorInfo package from Java
recommend a list of useful with at most 5 apis for this package, exlclude method inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `MBeanConstructorInfo(String name, String signature, String[] exceptions)`: This constructor creates a new MBeanConstructorInfo object with the specified name, signature, and exceptions.

2. `String getName()`: This method returns the name of the constructor.

3. `String getSignature()`: This method returns the signature of the constructor.

4. `String[] getExceptions()`: This method returns an array of exception types that the constructor may throw.

5. `boolean equals(Object obj)`: This method compares this MBeanConstructorInfo object with the specified object for equality.

6. `int hashCode()`: This method returns the hash code value for this MBeanConstructorInfo object.
================================================================

Sample: 10 MBeanFeatureInfo
----------------------------------------------------------------

@@ Instruction
I want to use javax.management.MBeanFeatureInfo package from Java
recommend a list of useful with at most 5 apis for this package, exlclude method inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean isMBeanFeatureInfo()`: This method returns true if the MBeanFeatureInfo object is a MBeanFeatureInfo.

2. `boolean isMBeanFeatureInfo(Object obj)`: This method returns true if the specified object is an instance of the MBeanFeatureInfo class.

3. `String getName()`: This method returns the name of the feature.

4. `String getDescription()`: This method returns the description of the feature.

5. `String getType()`: This method returns the type of the feature.

6. `String getDefaultValue()`: This method returns the default value of the feature.

7. `String getMaximum()`: This method returns the maximum value of the feature.

8. `String getMinimum()`: This method returns the minimum value of the feature.

9. `String getWritable()`: This method returns the writable status of the feature.

10. `String getReadable()`: This method returns the readable status of the feature.

11. `String getIs()`: This method returns the is status of the feature.

12. `String getNotification()`: This method returns the notification status of the feature.

13. `String getNotificationType()`: This method returns the notification type of the feature.

14. `String getNotificationMessage()`: This method returns the notification message of the feature.

15. `String getNotificationMessageType()`: This method returns the notification message type of the feature.

16. `String getNotificationMessageEnabled()`: This method returns the notification message enabled status of the feature.

17. `String getNotificationMessageEnabledType()`: This method returns the notification message enabled type of the feature.

18. `String getNotificationMessageEnabledType()`: This method returns the notification message enabled type of the feature.

19. `String getNotificationMessageEnabledType()`: This method returns the notification message enabled type of the feature.

20. `String getNotificationMessageEnabledType()`: This method returns the notification message enabled type of the feature.
================================================================

Sample: 11 MBeanInfo
----------------------------------------------------------------

@@ Instruction
I want to use javax.management.MBeanInfo package from Java
recommend a list of useful with at most 5 apis for this package, exlclude method inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `ObjectName getObjectName()`: This method returns the ObjectName of the MBean.

2. `String getClassName()`: This method returns the class name of the MBean.

3. `String getDescription()`: This method returns the description of the MBean.

4. `String getType()`: This method returns the type of the MBean.

5. `MBeanAttributeInfo[] getAttributes()`: This method returns an array of MBeanAttributeInfo objects that describe the attributes of the MBean.

6. `MBeanConstructorInfo[] getConstructors()`: This method returns an array of MBeanConstructorInfo objects that describe the constructors of the MBean.

7. `MBeanOperationInfo[] getOperations()`: This method returns an array of MBeanOperationInfo objects that describe the operations of the MBean.

8. `MBeanNotificationInfo[] getNotifications()`: This method returns an array of MBeanNotificationInfo objects that describe the notifications of the MBean.

9. `MBeanParameterInfo[] getDefaultConstructorSignature()`: This method returns an array of MBeanParameterInfo objects that describe the parameters of the default constructor of the MBean.

10. `MBeanParameterInfo[] getDefaultSignature()`: This method returns an array of MBeanParameterInfo objects that describe the parameters of the default operation of the MBean.

11. `MBeanParameterInfo[] getDefaultSignature()`: This method returns an array of MBeanParameterInfo objects that describe the parameters of the default operation of the MBean.

12. `MBeanParameterInfo[] getDefaultSignature()`: This method returns an array of MBeanParameterInfo objects that describe the parameters of the default operation of the MBean.

13. `MBeanParameterInfo[] getDefaultSignature()`: This method returns an array of MBeanParameterInfo objects that describe the parameters of the default operation of the MBean.

14. `MBeanParameterInfo[] getDefaultSignature()`: This method returns an array of MBeanParameterInfo objects that describe the parameters of the default operation of the MBean.

15. `MBeanParameterInfo[] getDefaultSignature()`: This method returns an array of MBeanParameterInfo objects that describe the parameters of the default operation of the MBean.
================================================================

Sample: 12 MBeanNotificationInfo
----------------------------------------------------------------

@@ Instruction
I want to use javax.management.MBeanNotificationInfo package from Java
recommend a list of useful with at most 5 apis for this package, exlclude method inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `MBeanNotificationInfo(NotificationType[] notificationTypes, String[] notificationNames)`: This constructor creates a new MBeanNotificationInfo object with the specified notification types and names.

2. `NotificationType[] getNotificationTypes()`: This method returns the notification types for this MBeanNotificationInfo object.

3. `String[] getNotificationNames()`: This method returns the notification names for this MBeanNotificationInfo object.

4. `boolean equals(Object obj)`: This method compares this MBeanNotificationInfo object with the specified object for equality.

5. `int hashCode()`: This method returns the hash code value for this MBeanNotificationInfo object.
================================================================

Sample: 13 MBeanOperationInfo
----------------------------------------------------------------

@@ Instruction
I want to use javax.management.MBeanOperationInfo package from Java
recommend a list of useful with at most 5 apis for this package, exlclude method inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean isQueryable()`: This method returns true if the operation is queryable.

2. `boolean isAction()`: This method returns true if the operation is an action.

3. `boolean isNotification()`: This method returns true if the operation is a notification.

4. `boolean isAbstract()`: This method returns true if the operation is abstract.

5. `String getDescription()`: This method returns a description of the operation.
================================================================

Sample: 14 MBeanParameterInfo
----------------------------------------------------------------

@@ Instruction
I want to use javax.management.MBeanParameterInfo package from Java
recommend a list of useful with at most 5 apis for this package, exlclude method inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean isReadOnly()`: This method returns true if the MBean attribute is read-only.

2. `String getType()`: This method returns the type of the MBean attribute.

3. `String getDescription()`: This method returns a description of the MBean attribute.

4. `String getName()`: This method returns the name of the MBean attribute.

5. `String getClassName()`: This method returns the fully qualified class name of the MBean attribute.

6. `String getMethodName()`: This method returns the method name of the MBean attribute.

7. `String getSignature()`: This method returns the signature of the MBean attribute.

8. `String getRef()`: This method returns the reference of the MBean attribute.

9. `String getStatus()`: This method returns the status of the MBean attribute.

10. `String getMessage()`: This method returns the message of the MBean attribute.

11. `String getException()`: This method returns the exception of the MBean attribute.

12. `String getErrorCode()`: This method returns the error code of the MBean attribute.

13. `String getTargetName()`: This method returns the target name of the MBean attribute.

14. `String getTargetType()`: This method returns the target type of the MBean attribute.

15. `String getTargetStatus()`: This method returns the target status of the MBean attribute.

16. `String getTargetMessage()`: This method returns the target message of the MBean attribute.

17. `String getTargetException()`: This method returns the target exception of the MBean attribute.

18. `String getTargetErrorCode()`: This method returns the target error code of the MBean attribute.

19. `String getTargetRef()`: This method returns the target reference of the MBean attribute.

20. `String getTargetClassName()`: This method returns the target class name of the MBean attribute.

21. `String getTargetSignature()`: This method returns the target signature of the MBean attribute.

22. `String getTargetMethodName()`: This method returns the target method name of the MBean attribute.

23. `String getTargetName()`: This method returns the target name of the MBean attribute.

24. `String getTargetType()`: This method returns the target type of the MBean attribute.

25. `String getTargetStatus()`: This method returns the target status of the MBean attribute.

26. `String getTargetMessage()`: This method returns the target message of the MBean attribute.

27. `String getTargetException()`: This method returns the target exception of the MBean attribute.

28. `String getTargetErrorCode()`: This method returns the target error code of the MBean attribute.

29. `String getTargetRef()`: This method returns the target reference of the MBean attribute.

30. `String getTargetClassName()`: This method returns the target class name of the MBean attribute.

31. `String getTargetSignature()`: This method returns the target signature of the MBean attribute.

32. `String getTargetMethodName()`: This method returns the target method name of the MBean attribute.

33. `String getTargetName()`: This method returns the target name of the MBean attribute.

34. `String getTargetType()`: This method returns the target type of the MBean attribute.

35. `String getTargetStatus()`: This method returns the target status of the MBean attribute.

36. `String getTargetMessage()`: This method returns the target message of the MBean attribute.

37. `String getTargetException()`: This method returns the target exception of the MBean attribute.

38. `String getTargetErrorCode()`: This method returns the target error code of the MBean attribute.

39. `String getTargetRef()`: This method returns the target reference of the MBean attribute.

40. `String getTargetClassName()`: This method returns the target class name of the MBean attribute.

41. `String getTargetSignature()`: This method returns the target signature of the MBean attribute.

42. `String getTargetMethodName()`: This method returns the target method name of the MBean attribute.

43. `String getTargetName()`: This method returns the target name of the MBean attribute.

44. `String getTargetType()`: This method returns the target type of the MBean attribute.

45. `String getTargetStatus()`: This method returns the target status of the MBean attribute.

46. `String getTargetMessage()`: This method returns the target message of the MBean attribute.

47. `String getTargetException()`: This method returns the target exception of the MBean attribute.

48. `String getTargetErrorCode()`: This method returns the target error code of the MBean attribute.

49. `String getTargetRef()`: This method returns the target reference of the MBean attribute.

50. `String getTargetClassName()`: This method returns the target class name of the MBean attribute.

51. `String getTargetSignature()`: This method returns the target signature of the MBean attribute.

52. `String getTargetMethodName()`: This method returns the target method name of the MBean attribute.

53. `String getTargetName()`: This method returns the target name of the MBean attribute.

54. `String getTargetType()`: This method returns the target type of the MBean attribute.

55. `String getTargetStatus()`: This method returns the target status of the MBean attribute.

56. `String getTargetMessage()`: This method returns
================================================================

Sample: 15 MBeanPermission
----------------------------------------------------------------

@@ Instruction
I want to use javax.management.MBeanPermission package from Java
recommend a list of useful with at most 5 apis for this package, exlclude method inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean isReadOnly()`: This method returns true if this MBean is read-only.

2. `boolean isWritable()`: This method returns true if this MBean is writable.

3. `boolean isWritable(String attribute)`: This method returns true if the specified attribute is writable.

4. `boolean isQueryable()`: This method returns true if this MBean is queryable.

5. `boolean isQueryable(String attribute)`: This method returns true if the specified attribute is queryable.
================================================================

Sample: 16 MBeanServerBuilder
----------------------------------------------------------------

@@ Instruction
I want to use javax.management.MBeanServerBuilder package from Java
recommend a list of useful with at most 5 apis for this package, exlclude method inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `MBeanServerBuilder.createMBeanServer()`: This method creates a new MBeanServer.

2. `MBeanServerBuilder.newMBeanServer()`: This method creates a new MBeanServer.

3. `MBeanServerBuilder.newMBeanServer(String name)`: This method creates a new MBeanServer with the specified name.

4. `MBeanServerBuilder.newMBeanServer(String name, Map<?,?> options)`: This method creates a new MBeanServer with the specified name and options.

5. `MBeanServerBuilder.newMBeanServer(String name, Map<?,?> options, MBeanServerBuilderCallback callback)`: This method creates a new MBeanServer with the specified name, options, and callback.
================================================================

Sample: 17 MBeanServerDelegate
----------------------------------------------------------------

@@ Instruction
I want to use javax.management.MBeanServerDelegate package from Java
recommend a list of useful with at most 5 apis for this package, exlclude method inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `ObjectInstance registerMBean(ObjectName name, MBean mbean)`: This method registers the specified MBean with the specified name.

2. `ObjectInstance registerMBean(ObjectName name, MBean mbean, NotificationBroadcaster broadcaster)`: This method registers the specified MBean with the specified name and the specified NotificationBroadcaster.

3. `ObjectInstance registerMBean(ObjectName name, MBean mbean, NotificationBroadcaster broadcaster, MBeanServer server)`: This method registers the specified MBean with the specified name, NotificationBroadcaster, and MBeanServer.

4. `ObjectInstance registerMBean(ObjectName name, MBean mbean, NotificationBroadcaster broadcaster, MBeanServer server, ObjectInstance instance)`: This method registers the specified MBean with the specified name, NotificationBroadcaster, MBeanServer, and ObjectInstance.

5. `ObjectInstance registerMBean(ObjectName name, MBean mbean, NotificationBroadcaster broadcaster, MBeanServer server, ObjectInstance instance, boolean force)`: This method registers the specified MBean with the specified name, NotificationBroadcaster, MBeanServer, ObjectInstance, and boolean force.
================================================================

Sample: 18 MBeanServerFactory
----------------------------------------------------------------

@@ Instruction
I want to use javax.management.MBeanServerFactory package from Java
recommend a list of useful with at most 5 apis for this package, exlclude method inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `MBeanServerFactory.createMBeanServer()`: This method creates a new MBean server.

2. `MBeanServerFactory.findMBeanServer(null)`: This method returns the MBean server associated with the specified name.

3. `MBeanServerFactory.createMBeanServer(null)`: This method creates a new MBean server with the specified name.

4. `MBeanServerFactory.getPlatformMBeanServer()`: This method returns the platform MBean server.

5. `MBeanServerFactory.createMBeanServer(String, ObjectName)`: This method creates a new MBean server with the specified name and parent.
================================================================

Sample: 19 MBeanServerInvocationHandler
----------------------------------------------------------------

@@ Instruction
I want to use javax.management.MBeanServerInvocationHandler package from Java
recommend a list of useful with at most 5 apis for this package, exlclude method inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `Object invoke(Object proxy, Method method, Object[] args)`: This method is used to invoke a method on the MBean server.

2. `Object queryMBean(ObjectName name, String query)`: This method is used to query the MBean server for information.

3. `ObjectName registerMBean(Object mbean, ObjectName name)`: This method is used to register an MBean with the MBean server.

4. `void unregisterMBean(ObjectName name)`: This method is used to unregister an MBean from the MBean server.

5. `Object getAttribute(ObjectName name, String attribute)`: This method is used to get the value of an attribute of an MBean.

6. `void setAttribute(ObjectName name, Attribute attribute)`: This method is used to set the value of an attribute of an MBean.

7. `Object invoke(ObjectName name, String actionName, Object[] params, String[] signature)`: This method is used to invoke an action on an MBean.

8. `ObjectName registerMBean(Object mbean, ObjectName name, NotificationBroadcaster broadcaster, String[] notificationTypes, String[] registeredNotificationTypes)`: This method is used to register an MBean with the MBean server and specify the notification types.

9. `ObjectName registerMBean(Object mbean, ObjectName name, NotificationBroadcaster broadcaster, String[] notificationTypes)`: This method is used to register an MBean with the MBean server and specify the notification types.

10. `ObjectName registerMBean(Object mbean, ObjectName name, NotificationBroadcaster broadcaster)`: This method is used to register an MBean with the MBean server and specify the notification types.
================================================================

Sample: 20 MBeanServerNotification
----------------------------------------------------------------

@@ Instruction
I want to use javax.management.MBeanServerNotification package from Java
recommend a list of useful with at most 5 apis for this package, exlclude method inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `ObjectInstance registerMBean(ObjectName name, MBean mbean)`: This method registers the specified MBean with the MBean server.

2. `void unregisterMBean(ObjectName name)`: This method unregisters the specified MBean from the MBean server.

3. `ObjectInstance queryMBean(ObjectName name)`: This method queries the MBean server for the specified MBean.

4. `void sendNotification(Notification notification)`: This method sends a notification to all MBeans that are registered for the specified notification type.

5. `void addNotificationListener(ObjectName name, NotificationListener listener, NotificationFilter filter, Object handback)`: This method adds a listener to the specified MBean.
================================================================

Sample: 21 MBeanServerPermission
----------------------------------------------------------------

@@ Instruction
I want to use javax.management.MBeanServerPermission package from Java
recommend a list of useful with at most 5 apis for this package, exlclude method inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean isReadOnly()`: This method returns true if this MBeanServerPermission is read-only.

2. `boolean implies(Subject subject)`: This method checks if the specified Subject is implied by this MBeanServerPermission.

3. `boolean equals(Object obj)`: This method compares this MBeanServerPermission with the specified Object.

4. `int hashCode()`: This method returns the hash code value for this MBeanServerPermission.

5. `String getActions()`: This method returns the actions string of this MBeanServerPermission.
================================================================

Sample: 22 MBeanTrustPermission
----------------------------------------------------------------

@@ Instruction
I want to use javax.management.MBeanTrustPermission package from Java
recommend a list of useful with at most 5 apis for this package, exlclude method inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean isRead()`: This method returns true if the MBeanTrustPermission object is read.

2. `boolean isWrite()`: This method returns true if the MBeanTrustPermission object is write.

3. `boolean implies(Permission p)`: This method checks if the specified permission is implied by this permission.

4. `boolean equals(Object obj)`: This method compares this MBeanTrustPermission object with the specified object.

5. `int hashCode()`: This method returns the hash code value for this MBeanTrustPermission object.
================================================================

Sample: 23 Notification
----------------------------------------------------------------

@@ Instruction
I want to use javax.management.Notification package from Java
recommend a list of useful with at most 5 apis for this package, exlclude method inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `Notification notification = new Notification(String type, Object source, long sequenceNumber, long timeStamp, String message)`: This constructor is used to create a new Notification object.

2. `Object getSource()`: This method returns the source of the notification.

3. `String getType()`: This method returns the type of the notification.

4. `long getSequenceNumber()`: This method returns the sequence number of the notification.

5. `long getTimeStamp()`: This method returns the time stamp of the notification.

6. `String getMessage()`: This method returns the message of the notification.

7. `void setUserData(Object userData)`: This method sets the user data of the notification.

8. `Object getUserData()`: This method returns the user data of the notification.

9. `void setMessage(String message)`: This method sets the message of the notification.

10. `void setType(String type)`: This method sets the type of the notification.

11. `void setSource(Object source)`: This method sets the source of the notification.

12. `void setSequenceNumber(long sequenceNumber)`: This method sets the sequence number of the notification.

13. `void setTimeStamp(long timeStamp)`: This method sets the time stamp of the notification.

14. `void setUserData(Object userData)`: This method sets the user data of the notification.

15. `Object getUserData()`: This method returns the user data of the notification.

16. `void setMessage(String message)`: This method sets the message of the notification.

17. `void setType(String type)`: This method sets the type of the notification.

18. `void setSource(Object source)`: This method sets the source of the notification.

19. `void setSequenceNumber(long sequenceNumber)`: This method sets the sequence number of the notification.

20. `void setTimeStamp(long timeStamp)`: This method sets the time stamp of the notification.
================================================================

Sample: 24 NotificationBroadcasterSupport
----------------------------------------------------------------

@@ Instruction
I want to use javax.management.NotificationBroadcasterSupport package from Java
recommend a list of useful with at most 5 apis for this package, exlclude method inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `void addNotificationListener(NotificationListener listener, Object handback)`: This method adds a NotificationListener for this MBean, which will be notified of all notifications sent by this MBean.

2. `void removeNotificationListener(NotificationListener listener)`: This method removes a NotificationListener from this MBean.

3. `void sendNotification(Notification notification)`: This method sends a Notification to all NotificationListeners registered for this MBean.

4. `void removeNotification(Notification notification)`: This method removes a Notification from this MBean's notification history.

5. `Notification[] getNotifications()`: This method returns an array containing all Notifications sent by this MBean since it was last queried.
================================================================

Sample: 25 NotificationFilterSupport
----------------------------------------------------------------

@@ Instruction
I want to use javax.management.NotificationFilterSupport package from Java
recommend a list of useful with at most 5 apis for this package, exlclude method inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean isNotificationEnabled(Notification notification)`: This method checks if the notification is enabled.

2. `void enableNotification(Notification notification)`: This method enables the notification.

3. `void disableNotification(Notification notification)`: This method disables the notification.

4. `void enableAllNotifications()`: This method enables all notifications.

5. `void disableAllNotifications()`: This method disables all notifications.
================================================================

Sample: 26 ObjectInstance
----------------------------------------------------------------

@@ Instruction
I want to use javax.management.ObjectInstance package from Java
recommend a list of useful with at most 5 apis for this package, exlclude method inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `ObjectInstance getObjectInstance()`: This method returns the `ObjectInstance` for this instance.

2. `Object getImplementation()`: This method returns the actual object that this instance represents.

3. `ObjectName getObjectName()`: This method returns the `ObjectName` for this instance.

4. `boolean isValid()`: This method returns true if this instance is valid.

5. `void setState(String state)`: This method sets the state of this instance.
================================================================

Sample: 27 ObjectName
----------------------------------------------------------------

@@ Instruction
I want to use javax.management.ObjectName package from Java
recommend a list of useful with at most 5 apis for this package, exlclude method inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean contains(Object o)`: This method returns true if this list contains the specified element.

2. `boolean remove(Object o)`: This method removes the first occurrence of the specified element from this list, if it is present.

3. `boolean isEmpty()`: This method returns true if this list contains no elements.

4. `int size()`: This method returns the number of elements in this list.

5. `Object clone()`: This method returns a shallow copy of this ArrayList instance.
================================================================

Sample: 28 Query
----------------------------------------------------------------

@@ Instruction
I want to use javax.management.Query package from Java
recommend a list of useful with at most 5 apis for this package, exlclude method inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean add(E e)`: This method appends the specified element to the end of this list.
2. `boolean addAll(Collection<? extends E> c)`: This method appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator.
3. `void clear()`: This method removes all of the elements from this list.
4. `boolean contains(Object o)`: This method returns true if this list contains the specified element.
5. `boolean containsAll(Collection<?> c)`: This method returns true if this list contains all of the elements of the specified collection.
6. `boolean equals(Object o)`: This method compares the specified object with this list for equality.
7. `E get(int index)`: This method returns the element at the specified position in this list.
8. `int indexOf(Object o)`: This method returns the index in this list of the first occurrence of the specified element, or -1 if this list does not contain this element.
9. `boolean isEmpty()`: This method returns true if this list contains no elements.
10. `Iterator<E> iterator()`: This method returns an iterator over the elements in this list in proper sequence.
11. `int lastIndexOf(Object o)`: This method returns the index in this list of the last occurrence of the specified element, or -1 if this list does not contain this element.
12. `ListIterator<E> listIterator()`: This method returns a list-iterator of the elements in this list (in proper sequence).
13. `ListIterator<E> listIterator(int index)`: This method returns a list-iterator of the elements in this list (in proper sequence), starting at the specified position in the list.
14. `boolean remove(Object o)`: This method removes the first occurrence of the specified element from this list, if it is present.
15. `E remove(int index)`: This method removes the element at the specified position in this list.
16. `boolean removeAll(Collection<?> c)`: This method removes from this list all of its elements that are contained in the specified collection.
17. `boolean retainAll(Collection<?> c)`: This method retains only the elements in this list that are contained in the specified collection.
18. `E set(int index, E element)`: This method replaces the element at the specified position in this list with the specified element.
19. `int size()`: This method returns the number of elements in this list.
20. `List<E> subList(int fromIndex, int toIndex)`: This method returns a view of the portion of this list between the specified fromIndex, inclusive, and toIndex, exclusive.
================================================================

Sample: 29 QueryEval
----------------------------------------------------------------

@@ Instruction
I want to use javax.management.QueryEval package from Java
recommend a list of useful with at most 5 apis for this package, exlclude method inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean add(E e)`: This method appends the specified element to the end of this list.
2. `boolean addAll(Collection<? extends E> c)`: This method appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator.
3. `void clear()`: This method removes all of the elements from this list.
4. `boolean contains(Object o)`: This method returns true if this list contains the specified element.
5. `boolean containsAll(Collection<?> c)`: This method returns true if this list contains all of the elements of the specified collection.
6. `boolean equals(Object o)`: This method compares the specified object with this list for equality.
7. `E get(int index)`: This method returns the element at the specified position in this list.
8. `int indexOf(Object o)`: This method returns the index in this list of the first occurrence of the specified element, or -1 if this list does not contain this element.
9. `boolean isEmpty()`: This method returns true if this list contains no elements.
10. `Iterator<E> iterator()`: This method returns an iterator over the elements in this list in proper sequence.
11. `int lastIndexOf(Object o)`: This method returns the index in this list of the last occurrence of the specified element, or -1 if this list does not contain this element.
12. `ListIterator<E> listIterator()`: This method returns a list-iterator of the elements in this list (in proper sequence).
13. `ListIterator<E> listIterator(int index)`: This method returns a list-iterator of the elements in this list (in proper sequence), starting at the specified position in the list.
14. `boolean remove(Object o)`: This method removes the first occurrence of the specified element from this list, if it is present.
15. `E remove(int index)`: This method removes the element at the specified position in this list.
16. `boolean removeAll(Collection<?> c)`: This method removes from this list all of its elements that are contained in the specified collection.
17. `boolean retainAll(Collection<?> c)`: This method retains only the elements in this list that are contained in the specified collection.
18. `E set(int index, E element)`: This method replaces the element at the specified position in this list with the specified element.
19. `int size()`: This method returns the number of elements in this list.
20. `List<E> subList(int fromIndex, int toIndex)`: This method returns a view of the portion of this list between the specified fromIndex, inclusive, and toIndex, exclusive.
================================================================

Sample: 30 StandardEmitterMBean
----------------------------------------------------------------

@@ Instruction
I want to use javax.management.StandardEmitterMBean package from Java
recommend a list of useful with at most 5 apis for this package, exlclude method inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean add(E e)`: This method appends the specified element to the end of this list.
2. `void add(int index, E element)`: This method inserts the specified element at the specified position in this list.
3. `boolean addAll(Collection<? extends E> c)`: This method appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator.
4. `boolean addAll(int index, Collection<? extends E> c)`: This method inserts all of the elements in the specified collection into this list, starting at the specified position.
5. `void clear()`: This method removes all of the elements from this list.
================================================================

Sample: 31 StandardMBean
----------------------------------------------------------------

@@ Instruction
I want to use javax.management.StandardMBean package from Java
recommend a list of useful with at most 5 apis for this package, exlclude method inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean add(E e)`: This method appends the specified element to the end of this list.
2. `void add(int index, E element)`: This method inserts the specified element at the specified position in this list.
3. `boolean addAll(Collection<? extends E> c)`: This method appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator.
4. `boolean remove(Object o)`: This method removes the first occurrence of the specified element from this list, if it is present.
5. `E remove(int index)`: This method removes the element at the specified position in this list.
================================================================

Sample: 32 StringValueExp
----------------------------------------------------------------

@@ Instruction
I want to use javax.management.StringValueExp package from Java
recommend a list of useful with at most 5 apis for this package, exlclude method inherent from its parent class
For each api method specify its return type and parameters in the below format

format: return_type method_name()

For example:
`boolean add(E e)`: This method appends the specified element to the end of this list.

@@ Response
1. `boolean add(E e)`: This method appends the specified element to the end of this list.
2. `void add(int index, E element)`: This method inserts the specified element at the specified position in this list.
3. `boolean addAll(Collection<? extends E> c)`: This method appends all of the elements in the specified collection to the end of this list, in the order that they are returned by the specified collection's iterator.
4. `boolean addAll(int index, Collection<? extends E> c)`: This method inserts all of the elements in the specified collection into this list, starting at the specified position.
5. `void clear()`: This method removes all of the elements from this list.
================================================================

